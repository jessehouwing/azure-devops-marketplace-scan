{
    "id":  "2f159376-316b-4652-a49c-392f9d534113",
    "name":  "CreatePullRequest",
    "friendlyName":  "Create Pull Request",
    "description":  "Automatically create a Pull Request for Azure DevOps or GitHub repository from Build or Release pipeline, supports also multi target branch.",
    "helpMarkDown":  "[More Information](https://github.com/shayki5/azure-devops-create-pr-task/blob/master/README.md)",
    "categories":  "Utility",
    "visibility":  [
                       "Build",
                       "Release"
                   ],
    "runsOn":  [
                   "Agent",
                   "DeploymentGroup"
               ],
    "author":  "Shayki Abramczyk",
    "version":  {
                    "Major":  1,
                    "Minor":  2,
                    "Patch":  335
                },
    "instanceNameFormat":  "Create Pull Request",
    "groups":  [
                   {
                       "name":  "completion",
                       "displayName":  "Complete options",
                       "isExpanded":  true,
                       "visibleRule":  "repoType=Azure DevOps"
                   },
                   {
                       "name":  "githubmerge",
                       "displayName":  "Complete options",
                       "isExpanded":  true,
                       "visibleRule":  "repoType=GitHub"
                   }
               ],
    "inputs":  [
                   {
                       "name":  "repoType",
                       "type":  "radio",
                       "label":  "Git repository type",
                       "required":  true,
                       "defaultValue":  "Azure DevOps",
                       "helpMarkDown":  "Choose the git repository type, Azure DevOps (Azure Repos) or GitHub",
                       "options":  {
                                       "Azure DevOps":  "Azure DevOps",
                                       "GitHub":  "GitHub"
                                   }
                   },
                   {
                       "name":  "githubEndpoint",
                       "type":  "connectedService:github",
                       "label":  "GitHub Connection (authorized with PAT)",
                       "defaultValue":  "",
                       "required":  true,
                       "helpMarkDown":  "Select the service endpoint for your GitHub connection, must be authorized with PAT. \u003cbr\u003eTo create one, click the Manage link and create a new service endpoint.",
                       "visibleRule":  "repoType=GitHub"
                   },
                   {
                       "name":  "repositorySelector",
                       "type":  "radio",
                       "label":  "Repository to use",
                       "required":  true,
                       "defaultValue":  "currentBuild",
                       "options":  {
                                       "currentBuild":  "Current repository build",
                                       "select":  "Select"
                                   },
                       "helpMarkDown":  "The method for selecting the Git repository. `Current build` will use the repository for which the current build is configured. `Select` will allow you to select an Azure Repository from your account.",
                       "visibleRule":  "repoType=Azure DevOps"
                   },
                   {
                       "name":  "githubRepository",
                       "type":  "pickList",
                       "label":  "Repository to use",
                       "required":  true,
                       "defaultValue":  "$(Build.Repository.Name)",
                       "helpMarkDown":  "Name of the GitHub repository",
                       "visibleRule":  "repoType=GitHub "
                   },
                   {
                       "name":  "projectId",
                       "type":  "picklist",
                       "label":  "Project",
                       "defaultValue":  "",
                       "properties":  {
                                          "EditableOptions":  "True",
                                          "DisableManageLink":  "True"
                                      },
                       "required":  true,
                       "helpMarkDown":  "Project that contains the git repository you want to create a pull request for.",
                       "visibleRule":  "repositorySelector = select"
                   },
                   {
                       "name":  "gitRepositoryId",
                       "type":  "picklist",
                       "label":  "Repository",
                       "defaultValue":  "",
                       "properties":  {
                                          "EditableOptions":  "True",
                                          "DisableManageLink":  "True"
                                      },
                       "required":  true,
                       "helpMarkDown":  "Git repository you want to create a pull request for",
                       "visibleRule":  "repositorySelector = select"
                   },
                   {
                       "name":  "isForked",
                       "type":  "boolean",
                       "label":  "Is Forked Repository",
                       "defaultValue":  false,
                       "required":  false,
                       "helpMarkDown":  "If checked, it means the source branch it from a forked repository and not from the original. the target repo will be the currnet build repo.",
                       "visibleRule":  "repositorySelector = select"
                   },
                   {
                       "name":  "sourceBranch",
                       "type":  "string",
                       "label":  "Source branch name",
                       "defaultValue":  "$(Build.SourceBranch)",
                       "required":  true,
                       "helpMarkDown":  "The branch name that will be merged (for example - feature). the default is \u0027$(Build.SourceBranch)\u0027."
                   },
                   {
                       "name":  "targetBranch",
                       "type":  "string",
                       "label":  "Target(s) branch name",
                       "defaultValue":  "",
                       "required":  true,
                       "helpMarkDown":  "The target branch name (for example - master). Also supports multi target branch with * (for example: test/*)."
                   },
                   {
                       "name":  "title",
                       "type":  "string",
                       "label":  "Title",
                       "defaultValue":  "",
                       "required":  true,
                       "helpMarkDown":  "The pull request title. You can use the token [BRANCH_NAME] to dynamically reuse the current target branch name in the pull request title (for example: Merge master into [BRANCH_NAME])."
                   },
                   {
                       "name":  "description",
                       "type":  "string",
                       "label":  "Description",
                       "defaultValue":  "",
                       "required":  false,
                       "helpMarkDown":  "The pull request description (optional)."
                   },
                   {
                       "name":  "reviewers",
                       "type":  "string",
                       "label":  "Reviewers (Azure DevOps: email address or team name, GitHub: username)",
                       "defaultValue":  "",
                       "required":  false,
                       "helpMarkDown":  "The pull request reviewers (optional). \u003cbr\u003e For Azure DevOps - one or more email address or team name separated by semicolon. for example: test@test.com;MyTeamName \u003cbr\u003e To make the reviewer required add \u0027req:\u0027, for example: \u0027req:test@test.com\u0027 \u003cbr\u003e For GitHub - one or more usernames separated by semicolon. for example: username1;username2"
                   },
                   {
                       "name":  "tags",
                       "type":  "string",
                       "label":  "Tags",
                       "defaultValue":  "",
                       "required":  false,
                       "helpMarkDown":  "Pull request tags/labels (optional). tag list separated by semicolon. for example: tag1;tag2"
                   },
                   {
                       "name":  "isDraft",
                       "type":  "boolean",
                       "label":  "Create Draft Pull Request",
                       "defaultValue":  false,
                       "required":  false,
                       "helpMarkDown":  "If checked, the pull request will be a Draft Pull Request. \u003cbr\u003e For Azure DevOps: see [here](https://docs.microsoft.com/en-us/azure/devops/repos/git/pull-requests?view=azure-devops#draft-pull-requests) more info. \u003cbr\u003e For GitHub: see [here](https://github.blog/2019-02-14-introducing-draft-pull-requests/) more info."
                   },
                   {
                       "name":  "linkWorkItems",
                       "type":  "boolean",
                       "label":  "Link Work Items",
                       "defaultValue":  true,
                       "required":  false,
                       "helpMarkDown":  "If checked, all the work items that linked to the commits will be linked also to the PullRequest.",
                       "visibleRule":  "repoType=Azure DevOps"
                   },
                   {
                       "name":  "passPullRequestIdBackToADO",
                       "type":  "boolean",
                       "label":  "Pass Pull Request ID back to Azure DevOps as a variable",
                       "defaultValue":  false,
                       "required":  false,
                       "helpMarkDown":  "If checked, the Pull Request ID will be passed back to Azure DevOps for use in other pipeline tasks.  The variable can be referenced as \u0027$(pullRequestId)\u0027.  Note the value will be a semicolon-separated list of IDs if multiple target branches are specified (e.g. \u0027feature/*\u0027 or \u0027branch1;branch2;branch3\u0027 )"
                   },
                   {
                       "name":  "autoComplete",
                       "type":  "boolean",
                       "label":  "Set Auto Complete",
                       "defaultValue":  false,
                       "required":  false,
                       "helpMarkDown":  "If checked the pull request will close once all branch policies are met.",
                       "groupName":  "completion"
                   },
                   {
                       "name":  "githubAutoMerge",
                       "type":  "boolean",
                       "label":  "Auto Merge",
                       "defaultValue":  false,
                       "required":  false,
                       "helpMarkDown":  "If checked the pull request will be closed and the branches will merged (if there are no conflicts).",
                       "groupName":  "githubmerge"
                   },
                   {
                       "name":  "mergeStrategy",
                       "type":  "picklist",
                       "label":  "Merge Strategy",
                       "defaultValue":  "Merge (No fast-forward)",
                       "required":  false,
                       "helpMarkDown":  "Specify the strategy used to merge the pull request during completion, see [here](https://devblogs.microsoft.com/devops/pull-requests-with-rebase/) more info.",
                       "options":  {
                                       "noFastForward":  "Merge (No fast-forward)",
                                       "squash":  "Squash commit",
                                       "rebase":  "Rebase and fast-forward",
                                       "rebaseMerge":  "Rebase and not fast-forward"
                                   },
                       "groupName":  "completion",
                       "visibleRule":  "autoComplete=true"
                   },
                   {
                       "name":  "githubMergeStrategy",
                       "type":  "picklist",
                       "label":  "Merge Strategy",
                       "defaultValue":  "merge",
                       "required":  false,
                       "helpMarkDown":  "Specify the strategy used to merge the pull request during completion, see [here](https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/about-merge-methods-on-github) more info.",
                       "options":  {
                                       "merge":  "merge",
                                       "squash":  "squash",
                                       "rebase":  "rebase"
                                   },
                       "groupName":  "githubmerge",
                       "visibleRule":  "githubAutoMerge=true"
                   },
                   {
                       "name":  "deleteSource",
                       "aliases":  [
                                       "deleteSourch"
                                   ],
                       "type":  "boolean",
                       "label":  "Delete Source Branch",
                       "defaultValue":  false,
                       "required":  false,
                       "helpMarkDown":  "If true, the source branch of the pull request will be deleted after completion.",
                       "groupName":  "completion",
                       "visibleRule":  "autoComplete=true"
                   },
                   {
                       "name":  "githubDeleteSourceBranch",
                       "type":  "boolean",
                       "label":  "Delete the source branch after merge",
                       "defaultValue":  false,
                       "required":  false,
                       "helpMarkDown":  "If true, the source branch of the pull request will be deleted after the auto merge.",
                       "groupName":  "githubmerge",
                       "visibleRule":  "githubAutoMerge=true"
                   },
                   {
                       "name":  "commitMessage",
                       "type":  "string",
                       "label":  "Commit Message",
                       "required":  false,
                       "helpMarkDown":  "If set, this will be used as the commit message of the merge commit.  If empty the default will be used.",
                       "groupName":  "completion",
                       "visibleRule":  "autoComplete=true"
                   },
                   {
                       "name":  "githubMergeCommitTitle",
                       "type":  "string",
                       "label":  "Commit Title",
                       "required":  false,
                       "helpMarkDown":  "If set, this will be used as the commit title of the merge commit.  If empty the default will be used.",
                       "groupName":  "githubmerge",
                       "visibleRule":  "githubAutoMerge=true"
                   },
                   {
                       "name":  "githubMergeCommitMessage",
                       "type":  "string",
                       "label":  "Commit Message",
                       "required":  false,
                       "helpMarkDown":  "If set, this will be used as the commit message of the merge commit.  If empty the default will be used.",
                       "groupName":  "githubmerge",
                       "visibleRule":  "githubAutoMerge=true"
                   },
                   {
                       "name":  "transitionWorkItems",
                       "type":  "boolean",
                       "label":  "Complete Associated Work Items",
                       "defaultValue":  false,
                       "required":  false,
                       "helpMarkDown":  "If true, we will attempt to transition any work items linked to the pull request into the next logical state (i.e. Active -\u003e Resolved).",
                       "groupName":  "completion",
                       "visibleRule":  "autoComplete=true"
                   },
                   {
                       "name":  "bypassPolicy",
                       "type":  "boolean",
                       "label":  "Bypass Policy",
                       "defaultValue":  false,
                       "required":  false,
                       "helpMarkDown":  "If true, policies will be explicitly bypassed while the pull request is completed.",
                       "groupName":  "completion",
                       "visibleRule":  "autoComplete=false"
                   },
                   {
                       "name":  "bypassReason",
                       "type":  "string",
                       "label":  "Bypass reason",
                       "defaultValue":  "",
                       "required":  false,
                       "helpMarkDown":  "If policies are bypassed, this reason is stored as to why bypass was used.",
                       "groupName":  "completion",
                       "visibleRule":  "bypassPolicy=true"
                   },
                   {
                       "name":  "alwaysCreatePr",
                       "type":  "boolean",
                       "label":  "Always Create Pull Request",
                       "defaultValue":  false,
                       "required":  false,
                       "helpMarkDown":  "If checked, a Pull Request will always be created even if there a no changed files.",
                       "visibleRule":  "repoType=Azure DevOps"
                   }
               ],
    "dataSourceBindings":  [
                               {
                                   "endpointId":  "tfs:teamfoundation",
                                   "target":  "projectId",
                                   "endpointUrl":  "{{endpoint.url}}/_apis/projects?$skip={{skip}}\u0026$top=1000",
                                   "resultSelector":  "jsonpath:$.value[?(@.state==\u0027wellFormed\u0027)]",
                                   "resultTemplate":  "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }",
                                   "callbackContextTemplate":  "{\"skip\": \"{{add skip 1000}}\"}",
                                   "callbackRequiredTemplate":  "{{isEqualNumber result.count 1000}}",
                                   "initialContextTemplate":  "{\"skip\": \"0\"}"
                               },
                               {
                                   "endpointId":  "tfs:teamfoundation",
                                   "target":  "gitRepositoryId",
                                   "endpointUrl":  "{{endpoint.url}}/{{project}}/_apis/git/repositories",
                                   "resultSelector":  "jsonpath:$.value[*]",
                                   "parameters":  {
                                                      "project":  "$(projectId)"
                                                  },
                                   "resultTemplate":  "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
                               },
                               {
                                   "target":  "githubRepository",
                                   "endpointId":  "$(githubEndpoint)",
                                   "dataSourceName":  "UserRepositories",
                                   "resultTemplate":  "{ \"Value\" : \"{{full_name}}\", \"DisplayValue\" : \"{{full_name}}\" }"
                               }
                           ],
    "execution":  {
                      "PowerShell3":  {
                                          "target":  "createPullRequest.ps1",
                                          "platforms":  [
                                                            "windows"
                                                        ],
                                          "workingDirectory":  "$(currentDirectory)"
                                      }
                  }
}
