{
    "id": "c3b1cf37-e7be-4bca-b434-ae159bfe647d",
    "name": "pbicli",
    "friendlyName": "Power BI CLI",
    "description": "Run Power BI CLI commands against an Power BI tenant in a PowerShell Core/Shell script when running on Linux agent or PowerShell/PowerShell Core/Batch script when running on Windows agent.",
    "author": "Jan Pieter Posthuma",
    "helpMarkDown": "[More Information](https://github.com/powerbi-cli/azure-pipeline-pbicli)",
    "category": "Deploy",
    "preview": false,
    "visibility": ["Build", "Release"],
    "runsOn": ["Agent", "DeploymentGroup"],
    "demands": [],
    "version": {
        "Major": "1",
        "Minor": "0",
        "Patch": "1"
    },
    "minimumAgentVersion": "2.115.0",
    "groups": [
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "connectedServiceNameARM",
            "aliases": ["azureSubscription"],
            "type": "connectedService:AzureRM",
            "label": "Azure Resource Manager connection",
            "required": true,
            "helpMarkDown": "Select an Azure Resource Manager service connection for the deployment",
            "properties": {
                "EndpointFilterRule": ""
            }
        },
        {
            "name": "cloud",
            "type": "pickList",
            "label": "Azure sovereign cloud",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Select which Azure sovereign cloud to sevice connection connects to",
            "options": {
                "public": "Azure Cloud",
                "china": "Azure China Cloud",
                "gcc": "Azure US Government",
                "gcchigh": "Azure US Government (High)",
                "dod": "Azure US Government (DoD)",
                "germany": "Azure Germany Cloud"
            }
        },
        {
            "name": "scriptType",
            "type": "pickList",
            "label": "Script Type",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Type of script: PowerShell/PowerShell Core/Bat/Shell script. Select Shell/PowerShell Core script when running on Linux agent or Batch/PowerShell/PowerShell Core script when running on Windows agent. PowerShell Core script can run on cross-platform agents (Linux, macOS, or Windows).",
            "options": {
                "ps": "PowerShell",
                "pscore": "PowerShell Core",
                "batch": "Batch",
                "bash": "Shell"
            }
        },
        {
            "name": "scriptLocation",
            "type": "pickList",
            "label": "Script Location",
            "defaultValue": "scriptPath",
            "required": true,
            "helpMarkDown": "Path to script: File path or Inline script",
            "options": {
                "inlineScript": "Inline script",
                "scriptPath": "Script path"
            }
        },
        {
            "name": "scriptPath",
            "type": "filePath",
            "label": "Script Path",
            "defaultValue": "",
            "required": true,
            "visibleRule": "scriptLocation = scriptPath",
            "helpMarkDown": "Fully qualified path of the script(.ps1 or .bat or .cmd when using Windows based agent else .ps1 or .sh when using linux based agent) or a path relative to the the default working directory"
        },
        {
            "name": "inlineScript",
            "type": "multiLine",
            "label": "Inline Script",
            "defaultValue": "",
            "required": true,
            "visibleRule": "scriptLocation = inlineScript",
            "helpMarkDown": "You can write your scripts inline here. When using Windows agent, use PowerShell or PowerShell Core or batch scripting whereas use PowerShell Core or shell scripting when using Linux based agents. For batch files use the prefix \"call\" before every pbicli command. You can also pass predefined and custom variables to this script using arguments \n\n example for PowerShell/PowerShellCore/shell: \npbicli version \npbicli workspace list \n\n example for batch:\ncall pbicli version \ncall pbicli workspace list",
            "properties": {
                "resizable": "true",
                "rows": "10",
                "maxLength": "5000"
            }
        },
        {
            "name": "scriptArguments",
            "aliases": ["arguments"],
            "type": "string",
            "label": "Script Arguments",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Arguments passed to the script",
            "properties": {
                "editorExtension": "ms.vss-services-azure.parameters-grid"
            }
        },
        {
            "name": "powerShellErrorActionPreference",
            "type": "pickList",
            "label": "ErrorActionPreference",
            "required": false,
            "defaultValue": "stop",
            "options": {
                "stop": "Stop",
                "continue": "Continue",
                "silentlyContinue": "SilentlyContinue"
            },
            "visibleRule": "scriptType = ps || scriptType = pscore",
            "helpMarkDown": "Prepends the line `$ErrorActionPreference = 'VALUE'` at the top of your powershell/powershell core script."
        },
        {
            "groupName": "advanced",
            "name": "version",
            "type": "string",
            "label": "Version of Power BI CLI",
            "required": false,
            "helpMarkDown": "The version of the Power BI CLI to use. If not specified, the 'latest' version will be used."
        },
        {
            "name": "cwd",
            "aliases": ["workingDirectory"],
            "type": "filePath",
            "label": "Working Directory",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Current working directory where the script is run.  Empty is the root of the repo (build) or artifacts (release), which is $(System.DefaultWorkingDirectory)",
            "groupName": "advanced"
        },
        {
            "groupName": "advanced",
            "name": "verbose",
            "label": "Verbose logging",
            "helpMarkDown": "Select to print more information to the console on run",
            "type": "boolean"
        },
        {
            "name": "failOnStandardError",
            "type": "boolean",
            "label": "Fail on Standard Error",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If this is true, this task will fail when any errors are written to the StandardError stream. Unselect the checkbox to ignore standard errors and rely on exit codes to determine the status",
            "groupName": "advanced"
        },
        {
            "name": "powerShellIgnoreLASTEXITCODE",
            "type": "boolean",
            "label": "Ignore $LASTEXITCODE",
            "required": false,
            "defaultValue": "false",
            "visibleRule": "scriptType = ps || scriptType = pscore",
            "helpMarkDown": "If this is false, the line `if ((Test-Path -LiteralPath variable:\\LASTEXITCODE)) { exit $LASTEXITCODE }` is appended to the end of your script. This will cause the last exit code from an external command to be propagated as the exit code of powershell. Otherwise the line is not appended to the end of your script.",
            "groupName": "advanced"
        }
    ],
    "dataSourceBindings": [],
    "instanceNameFormat": "Power BI CLI $(scriptPath)",
    "execution": {
        "Node10": {
            "target": "./dist/pbicli.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "AzureModels_ConstructorFailed": "Unable to retrieve endpoint details for Azure",
        "Npm_Failed": "npm failed with error: %s",
        "Npm_ReturnCode": "npm exited with return code: %d",
        "PbiCli_AuthSchemeNotSupported": "Authentication scheme '%s' is not supported",
        "PbiCli_Failed": "npm failed with error: %s",
        "PbiCli_ReturnCode": "npm exited with return code: %d",
        "PbiCli_ScriptFailed": "Script failed with error: %s",
        "PbiCli_ScriptFailedStdErr": "Script has output to stderr. Failing as failOnStdErr is set to true.",
        "PbiCli_ScriptFailedWithExitCode": "Script failed with exit code: %d",
        "PbiCli_ScriptReturnCode": "Script exited with return code: %d",
        "TaskParameters_ConstructorFailed": "Unable to retrieve task details: %s",
        "TaskParameters_MissingInput": "Missing required input '%s'"
    }
}
