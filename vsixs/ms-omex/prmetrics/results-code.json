{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/IndirectCommandInjection",
              "name": "IndirectCommandInjection",
              "shortDescription": {
                "text": "Command Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n### Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/mapnik/node-mapnik/commit/d2a7271f45217257b9656378fd24fc348821081c?diff=split#diff-15f8ac503c41d1d742ac6eba51d3bfe15cc0478971dfb957dfe0cb90410d1ad8L32",
                    "lines": [
                      {
                        "line": "child_process.exec('open ' + image);",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "child_process.exec('open', [image]);",
                        "lineNumber": 31,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/egoist/maid/commit/ef266980787724c7ec81c223eb147ffbe4373176?diff=split#diff-6d186b954a58d5bb740f73d84fe39073L65",
                    "lines": [
                      {
                        "line": "if (task.type === 'sh' || task.type === 'bash') {",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const spawn = require('cross-spawn')",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const cmd = spawn('sh', ['-c', task.script, ...process.argv.slice(2)], {",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    stdio: 'inherit',",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    env: Object.assign({}, process.env, {",
                        "lineNumber": 66,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const cmd = spawn(",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "    task.type,",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "    ['-c', task.script, ...process.argv.slice(2)],",
                        "lineNumber": 66,
                        "lineChange": "added"
                      },
                      {
                        "line": "    {",
                        "lineNumber": 67,
                        "lineChange": "added"
                      },
                      {
                        "line": "      stdio: 'inherit',",
                        "lineNumber": 68,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/balena-io/etcher/commit/ed70e4e590f45fe06f2f91c6e3f2f7f21efc94bc?diff=split#diff-91be229e09f285c394db47b3c77dc19eL44",
                    "lines": [
                      {
                        "line": "app.dock.hide();",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "sudoPrompt.exec(process.argv.join(' '), {",
                        "lineNumber": 43,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  name: packageJSON.displayName",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "}, function(error) {",
                        "lineNumber": 45,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return sudoPrompt.execAsync(process.argv.join(' '), {",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "  name: applicationName",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 52,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "add test command",
                  "Not much testing so far, and WALA utility scripts have not been updated yet.",
                  "Add cli tests"
                ],
                "precision": "very-high",
                "repoDatasetSize": 217,
                "cwe": [
                  "CWE-78"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/IndirectCommandInjection",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into child_process.exec, where it is used to build a shell command. Forwarding command-line arguments or file paths from the local environment to a function that executes a system command can change the meaning of the command unexpectedly due to unescaped special characters, which may result in a Indirect Command Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to build a shell command. Forwarding command-line arguments or file paths from the local environment to a function that executes a system command can change the meaning of the command unexpectedly due to unescaped special characters, which may result in a Indirect Command Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[child_process.exec](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "task/exec-child.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 19,
                  "startColumn": 9,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b218b3dcc350ffb8cf55f303c785f9749817047d7611759df85373d2094fb74d",
            "1": "5a562d4f.4773f344.607187b5.dd894bdc.88319c03.f8890b3c.877b899d.d29e96f4.6e283998.4773f344.8ed128db.dd894bdc.3f452f8c.5fce695c.cd61fc56.e6930396"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "task/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "task/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "task/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "task/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 5,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "task/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 40,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "task/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 24,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "task/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 5,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "task/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 25,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "task/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 19,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "task/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "task/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "task/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 5,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "task/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "task/exec-child.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 9,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 600,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "files": 1,
            "isSupported": true,
            "lang": "XML"
          },
          {
            "files": 1,
            "isSupported": true,
            "lang": "JavaScript"
          }
        ]
      }
    }
  ]
}
