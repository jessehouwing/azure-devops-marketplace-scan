{"id":"{38AD8E23-476F-4649-A5D1-D796EC9A626F}","name":"SitecoreAzureVstsDeployer","friendlyName":"Sitecore Azure Deployer","description":"Release task for deploying Sitecore to Azure","helpMarkDown":"Information on how to use the task: [See repository](https://github.com/akuryan/vsts.extensions/tree/master/SitecoreDeployer)  \n","category":"Utility","visibility":["Release"],"author":"Anton Kuryan","version":{"Major":"1","Minor":"3","Patch":"4"},"demands":["azureps"],"minimumAgentVersion":"1.95.0","groups":[{"name":"security","displayName":"Security","isExpanded":true}],"inputs":[{"name":"ConnectedServiceNameSelector","type":"pickList","label":"Azure Connection Type","required":false,"helpMarkDown":"","defaultValue":"ConnectedServiceNameARM","options":{"ConnectedServiceNameARM":"Azure Resource Manager"}},{"name":"ConnectedServiceName","type":"connectedService:Azure","label":"Azure Classic Subscription","defaultValue":"","required":true,"helpMarkDown":"Azure Classic subscription to configure before running PowerShell","visibleRule":"ConnectedServiceNameSelector = ConnectedServiceName"},{"name":"ConnectedServiceNameARM","type":"connectedService:AzureRM","label":"Azure RM Subscription","defaultValue":"","required":true,"helpMarkDown":"Azure Resource Manager subscription to configure before running PowerShell","visibleRule":"ConnectedServiceNameSelector = ConnectedServiceNameARM"},{"name":"armTemplatePath","type":"filePath","label":"ARM template path","defaultValue":"","required":true,"helpMarkDown":"Enter path to ARM template file (it shall be on agent FS - for examples, published as build artifact)"},{"name":"armParametersPath","type":"filePath","label":"ARM parameters path","defaultValue":"","required":true,"helpMarkDown":"Enter path to ARM parameters file (it shall be on agent FS - for examples, published as build artifact)"},{"name":"resourceGroupName","type":"string","label":"Resource group name","defaultValue":"","required":true,"helpMarkDown":"Enter resource group name"},{"name":"location","type":"pickList","label":"Location","required":true,"helpMarkDown":"Select your resource group location. If it is not present there - than for Infra deployment type - it will be created ","defaultValue":"westeurope","options":{"eastasia":"East Asia","southeastasia":"Southeast Asia","centralus":"Central US","eastus":"East US","eastus2":"East US 2","westus":"West US","northcentralus":"North Central US","southcentralus":"South Central US","northeurope":"North Europe","westeurope":"West Europe","japanwest":"Japan West","japaneast":"Japan East","brazilsouth":"Brazil South","australiaeast":"Australia East","australiasoutheast":"Australia Southeast","southindia":"South India","centralindia":"Central India","westindia":"West India","canadacentral":"Canada Central","canadaeast":"Canada East","uksouth":"UK South","ukwest":"UK West","westcentralus":"West Central US","westus2":"West US 2","koreacentral":"Korea Central","koreasouth":"Korea South","francecentral":"France Central","francesouth":"France South"}},{"name":"deploymentType","type":"pickList","label":"Deployment type","required":true,"helpMarkDown":"Select deployment type according to definition: Infrastructure means clean deployment; Deploy - gets output of Infra deployment (it tries to seek for output of sitecore-infra deployment at target resource group), adds it to collection of parameters; Validate - will just validate your template and all parameters. Defaults to infrastructure deployment, as it is full deployment type without any reference to previous deployments","defaultValue":"infra","options":{"infra":"Infrastructure","redeploy":"Deploy","validate":"Validate"}},{"name":"generateSas","type":"pickList","label":"Generate SAS?","required":true,"helpMarkDown":"If Sitecore deploy packages are situated on storage account, belonging to current subscription - powershell script will generate short-living SAS to access them","defaultValue":"True","options":{"True":"Yes","False":"No"}},{"name":"licenseLocation","type":"pickList","label":"License location","required":true,"helpMarkDown":"Please, select where license is located: Inline - paste license.xml content to multiline field (caution - this data is stored as environment variable, so you could not store more than 32 KiB in total for all variables); URL - enter URL, where valid license.xml could be downloaded; Filesystem - enter path, where license.xml is located on agent FS; none - license.xml content is added to ARM template already","defaultValue":"none","options":{"inline":"Inline","url":"URL","filesystem":"Filesystem","none":"Defined in template"}},{"name":"inlineLicense","type":"multiLine","label":"Inline license.xml","required":false,"defaultValue":"# You shall put your license.xml content here","helpMarkDown":"Enter license.xml content here.","visibleRule":"licenseLocation = inline","properties":{"resizable":"true","rows":"10"}},{"name":"urlToLicense","type":"string","label":"License.xml URL","defaultValue":"","required":false,"helpMarkDown":"Put URL to license.xml here. If it is located on storage account, belonging to current subscription and Generate SAS? is set to Yes - shortliving SAS will be generated automatically","visibleRule":"licenseLocation = url"},{"name":"pathToLicense","type":"filePath","label":"License.xml path on FileSystem","defaultValue":"","required":false,"helpMarkDown":"Put path to license.xml location on agent FS","visibleRule":"licenseLocation = filesystem"},{"name":"additionalArmParams","type":"string","label":"Additional ARM parameters","defaultValue":"","required":false,"helpMarkDown":"Put additional parameters to be passed/overridden in template parameters. Settings following the syntax -key value. Value containing spaces should be enclosed in double quotes.<br /> Example : -phpVersion 5.6 -linuxFxVersion: node|6.11. Please, do not specify same values twice, as this will lead to an error","properties":{"editorExtension":"ms.vss-services-azure.parameters-grid"}},{"name":"limitAccesToPrc","type":"boolean","label":"Limit access to PRC role by IP","defaultValue":"true","required":false,"groupName":"security","helpMarkDown":"Blocks access to PRC role completely, as advised by Sitecore"},{"name":"prcInstanceName","type":"string","label":"PRC instance name","defaultValue":"","required":false,"groupName":"security","helpMarkDown":"If Processing role slot name does not conform to rule 'resourceGroupName + -prc/prc-staging', please, specify it here.","visibleRule":"limitAccesToPrc = true"},{"name":"limitAccesToRep","type":"boolean","label":"Limit access to REP role by IP","defaultValue":"true","required":false,"groupName":"security","helpMarkDown":"Allows to limit access to reporting role by setting IP whitelist."},{"name":"repInstanceName","type":"string","label":"REP instance name","defaultValue":"","required":false,"groupName":"security","helpMarkDown":"If Reporting role slot name does not conform to rule 'resourceGroupName + -rep/rep-staging', please, specify it here.","visibleRule":"limitAccesToRep = true"},{"name":"limitAccesToCm","type":"boolean","label":"Limit access to CM role by IP","defaultValue":"false","required":false,"groupName":"security","helpMarkDown":"Allows to limit access to content management role by setting IP whitelist."},{"name":"cmInstanceName","type":"string","label":"CM instance name","defaultValue":"","required":false,"groupName":"security","helpMarkDown":"If CM role slot name does not conform to rule 'resourceGroupName + -cm/cm-staging', please, specify it here.","visibleRule":"limitAccesToCm = true"},{"name":"ipMaskCollection","type":"string","label":"IP/Mask comma-separated collection","defaultValue":"","required":false,"groupName":"security","helpMarkDown":"Here you can define additional IPs, which are allowed access to REP/CM instance by defining comma-separated list of IP's in CIDR notation (e.g. '1.1.1.1/32,192.168.0.1/32,1.1.1.1/32') for testing and monitoring purposes.","visibleRule":"limitAccesToRep = true || limitAccesToCm = true"},{"name":"limitAccessToKudu","type":"boolean","label":"Limit access to Kudu of web apps in resource group by IP","defaultValue":"false","required":false,"groupName":"security","helpMarkDown":"Allows to limit access to Kudu of all web apps in resource group by setting IP whitelist."},{"name":"kuduIpMaskCollection","type":"string","label":"Kudu IP/Mask comma-separated collection","defaultValue":"","required":false,"groupName":"security","helpMarkDown":"Here you can define additional IPs, which are allowed access to Kudu of each web app in resource group by defining comma-separated list of IP's in CIDR notation (e.g. '1.1.1.1/32,192.168.0.1/32,1.1.1.1/32'). You do not need to specify external IP of your agent, as it will be retrieved during limiting access.","visibleRule":"limitAccessToKudu = true"}],"instanceNameFormat":"Deploy Sitecore","execution":{"PowerShell3":{"target":"deploy.ps1","argumentFormat":"","workingDirectory":"$(currentDirectory)"}}}
