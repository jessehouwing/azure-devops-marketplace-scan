{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/InsufficientPostmessageValidation",
              "name": "InsufficientPostmessageValidation",
              "shortDescription": {
                "text": "Insufficient postMessage Validation"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\npostMessage is a feature to perform cross-origin communication between JavaScript Window objects. This can be done by:\n\n* The sender using the `targetWindow.postMessage(message, targetOrigin)` to send a message to the `targetWindow` but only if the origin in that window matches `targetOrigin` (or if targetOrigin is set to the special value `*`);\n\n* The receiver listening for the message event in the window object.\n\nHowever, if no validation is done by the receiver, this could allow any window to send arbitrary data to the handler. This vulnerability could be leveraged by an attacker to disclose sensitive data to a malicious origin, or perform actions on a vicitim's behalf.\n\nExample:\n\n```\n\nwindow.addEventListener(\"message\", (event) => {\n    // DANGEROUS: No validation of origin\n    doStuff(event.data);\n});\n\n```\n\n### Best practices for prevention\n* Adopt a zero-trust model in which all input is considered potentially suspect.\n* Specify the targetOrigin instead of designating a wildcard `*`.\n\nExample:\n\n```\nwindow.addEventListener(\"message\", (event) => {\n    if (event.origin !== \"http://example.org\") // SAFE: origin checked\n        return;\n\n    console.log(event.data)\n});\n```\n\n### References\n\n* [Introduction to postMessage() Vulnerabilities](https://blog.yeswehack.com/yeswerhackers/introduction-postmessage-vulnerabilities/)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-20"
                ]
              }
            },
            {
              "id": "javascript/CodeInjection",
              "name": "CodeInjection",
              "shortDescription": {
                "text": "Code Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA secure code injection attack occurs when the attacker exploits an existing input processing vulnerability, passing special characters and code directly to a web-based application or site. The code is then executed, potentially granting the user system access to export sensitive data, to install malware, or even to move laterally and to exploit other systems in the trusted internal network environment. While code injection attacks can take place in several ways, the common factor is allowing the user to submit executable code to the application. The most common forms of code injection are SQL injection (server side) and cross-site scripting (XSS) (client side).\n\n### Best practices for prevention\n\n- Never trust user input. Assume any input may transmit harmful values.\n- Apply least privilege principle (for example, limit users to read only wherever possible).\n- Avoid passing raw user input directly to functions; use parameterized queries to extract data first.\n- Sanitize user input strings of special characters such as ?, &, /, <, >, and quotation marks.\n- Use whitelisting of known good values.\n- Validate user input against expected response types.\n- Escape shell commands with functions such as shlex for Python, or escapeshellarg for PHP.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities so these cannot be exploited by code injection.\n- Educate all team members on safe data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/EveripediaNetwork/backend-api/commit/1257ceac123676905706a799803c6f4b3047d078?diff=split#diff-4914682a5cb59e0a56a990b5c08837df235443dfc34835dbd08ccffeaba388f9L136",
                    "lines": [
                      {
                        "line": "setInterval(this.restartIfFailing, 15 * 1000); // every 15 seconds",
                        "lineNumber": 135,
                        "lineChange": "removed"
                      },
                      {
                        "line": "setInterval(() => this.restartIfFailing.apply(this), 15 * 1000); // every 15 seconds",
                        "lineNumber": 135,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/frappe/frappe/commit/a9f947f305fa4c0a59aa64be028cccc7f070bc8b?diff=split#diff-9ec83d420bc34df3d20111dd9bd94f8d86bc106941998026a0aafe53d38ccf92L45",
                    "lines": [
                      {
                        "line": "var r = eval(\"var a=\"+rtxt+\";a\"); ",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var r = JSON.parse(rtxt); ",
                        "lineNumber": 44,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Azure/meta-azure-service-broker/commit/0e9308e4f0bbcc86d88e99c794c58fdd6ba12b43?diff=split#diff-cadcf5f0e29e436426513309ec10bc33bdb19c40b6cc5a2e7a4b375a230a7588L43",
                    "lines": [
                      {
                        "line": "return setTimeout(executeSqlWithParameters(config, sql, parameters, callback, retry-1, retryInterval), retryInterval);",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return setTimeout(function(){executeSqlWithParameters(config, sql, parameters, callback, retry-1, retryInterval);}, retryInterval);",
                        "lineNumber": 42,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Try & catch on template eval",
                  "ui tests and refactoring",
                  "(feature) added support for request timeout"
                ],
                "precision": "very-high",
                "repoDatasetSize": 363,
                "cwe": [
                  "CWE-94"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/InsufficientPostmessageValidation",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "The origin of the received message is not checked. This means any site (even malicious) can send message to this window. If you don't expect this, consider checking the origin of sender.",
            "markdown": "The origin of the received message is not checked. This means any site (even malicious) can send message to this window. If you don't expect this, consider checking the origin of sender.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/VSS.SDK.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 665,
                  "endLine": 665,
                  "startColumn": 65,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fb36607d7594dd681ad555b378d4f9ae25a70f3129ddf5d47293163ee9c9fd39",
            "1": "cbabde2c.4773f344.607187b5.c559ebce.d9bf5fbd.f681b7b7.83265159.3cee0341.9194119a.4773f344.607187b5.c559ebce.d9bf5fbd.f681b7b7.83265159.1db0a836"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/VSS.SDK.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 665,
                            "endLine": 665,
                            "startColumn": 65,
                            "endColumn": 70
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 204,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/CodeInjection",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the document location flows into setTimeout, where it is executed as JavaScript code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as JavaScript code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[the document location](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[setTimeout](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/applicationinsights-web.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3340,
                  "endLine": 3340,
                  "startColumn": 21,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "84fbfc83c52143beda9a6579da3553676e58867ab931fe02b09ee769faf108ea",
            "1": "2391ac32.4773f344.607187b5.51a267e0.253b4e10.8020cfdf.cd61fc56.49a13d6a.2391ac32.91d1179c.aff85a25.861094dd.df2e629b.b2efa7d0.f067cb94.40e83381"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/applicationinsights-web.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3335,
                            "endLine": 3335,
                            "startColumn": 77,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/applicationinsights-web.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3335,
                            "endLine": 3335,
                            "startColumn": 77,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/applicationinsights-web.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3334,
                            "endLine": 3334,
                            "startColumn": 31,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/applicationinsights-web.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3334,
                            "endLine": 3334,
                            "startColumn": 25,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/applicationinsights-web.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3335,
                            "endLine": 3335,
                            "startColumn": 25,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/applicationinsights-web.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3343,
                            "endLine": 3343,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/applicationinsights-web.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3343,
                            "endLine": 3343,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/applicationinsights-web.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3340,
                            "endLine": 3343,
                            "startColumn": 32,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/applicationinsights-web.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3340,
                            "endLine": 3340,
                            "startColumn": 21,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 804,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "files": 1,
            "isSupported": true,
            "lang": "XML"
          },
          {
            "files": 8,
            "isSupported": true,
            "lang": "JavaScript"
          },
          {
            "files": 2,
            "isSupported": true,
            "lang": "HTML"
          }
        ]
      }
    }
  ]
}
