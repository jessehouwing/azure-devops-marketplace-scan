{"id":"95e6256c-0b65-4f14-9ef7-7a20ed5c0027","name":"hash-and-cache","friendlyName":"Hash And Cache","description":"Allows you to wrap caching behavior around an arbitrary command.  It will take in a list of source files, generate a hash, then check a cache (stored in Azure Storage) to see if those inputs have been seen before.  If so it will download the cached outputs instead of running the command.  If no matching cache is found it will run the command instead.","author":"Dylan Smith","helpMarkDown":"","category":"Utility","visibility":["Build","Release"],"runsOn":["Agent","DeploymentGroup"],"demands":["node.js"],"version":{"Major":"1","Minor":"0","Patch":"35"},"minimumAgentVersion":"2.117.0","instanceNameFormat":"Hash And Cache - $(execCommand)","inputs":[{"name":"sourcePath","type":"filePath","label":"Sources Root","defaultValue":"$(Build.SourcesDirectory)","required":true,"helpMarkDown":"Root path to look for source files in"},{"name":"sourceFiles","type":"multiLine","label":"Source Files","defaultValue":"**","required":true,"helpMarkDown":"List of files or glob patterns (one per line) that will be used to generate the hash"},{"name":"sourceIgnore","type":"multiLine","label":"Source Ignore Files","defaultValue":"","required":false,"helpMarkDown":"List of files or glob patterns (one per line) that will be ignored when generating the hash"},{"name":"hashSuffix","type":"string","label":"Extra Hash Metadata","defaultValue":"","required":false,"helpMarkDown":"Extra data that will be included in the hash.  Can be used to make the hash/cache matching more specific. e.g. gulp=3.9.1"},{"name":"execWorkingDirectory","type":"filePath","label":"Exec Working Directory","defaultValue":"$(Build.SourcesDirectory)","required":false,"helpMarkDown":""},{"name":"execCommand","type":"string","label":"Exec Command","defaultValue":"","required":false,"helpMarkDown":"The command to run if there is no cache found."},{"name":"storageAccount","type":"string","label":"Storage Account Name","defaultValue":"","required":false,"helpMarkDown":"The name of the storage account (NOT the full URL) to be used to store the caches"},{"name":"storageContainer","type":"string","label":"Storage Container","defaultValue":"","required":false,"helpMarkDown":"The name of a blob container in the storage account"},{"name":"storageKey","type":"string","label":"Storage Key","defaultValue":"","required":false,"helpMarkDown":"Key to use to access the storage account"},{"name":"outputPath","type":"string","label":"Output Root","defaultValue":"$(Build.SourcesDirectory)","required":false,"helpMarkDown":"Root path to use when extracting the cache - or collecting files to create the cache"},{"name":"outputFiles","type":"multiLine","label":"Output Files","defaultValue":"**","required":false,"helpMarkDown":"List of files or glob patterns (one per line) that will be included when creating a new cache (only applicable if Upload New Cache option is on)"},{"name":"outputIgnore","type":"multiLine","label":"Output Ignore Files","defaultValue":"","required":false,"helpMarkDown":"List of files or glob patterns (one per line) that will be ignored when creating a new cache (only applicable if Upload New Cache option is on)"},{"name":"uploadCacheOnMiss","type":"boolean","label":"Create and Upload a new cache on a cache miss","defaultValue":"false","required":false,"helpMarkDown":"If there is a cache miss - after executing the Exec Command - this will collect all the files specific in Output Root/Files/Ignore, zip them up and upload them to Azure Storage"},{"name":"downloadCacheOnHit","type":"boolean","label":"Download and Extract the cache if matching hash is found","defaultValue":"true","required":false,"helpMarkDown":"If a cache matching the hash is found, download it and extract it to the Output Root directory - and do not execute the Exec Command"}],"execution":{"Node":{"target":"task.js","argumentFormat":""}}}
