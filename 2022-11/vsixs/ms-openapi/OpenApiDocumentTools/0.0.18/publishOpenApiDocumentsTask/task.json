{
    "id": "dca5ffa0-aee9-4817-b870-b079f31e361e",
    "name": "PublishOpenApiDocument",
    "friendlyName": "Publish OpenAPI Document",
    "description": "Publishes OpenAPI document(s) for a service to Git source control.",
    "category": "Utility",
    "visibility": [
        "Release"
    ],
    "author": "Microsoft Corporation",
    "version": {
        "Major": 0,
        "Minor": 0,
        "Patch": 5
    },
    "instanceNameFormat": "Publish OpenAPI Documents: $(serviceName)",
    "groups": [
        {
            "name": "source",
            "displayName": "Publish From",
            "isExpanded": true
        },
        {
            "name": "destination",
            "displayName": "Publish To",
            "isExpanded": true
        }
    ],
    "inputs": [
        {
            "name": "serviceName",
            "type": "string",
            "label": "Service Name",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Friendly name of the service."
        },
        {
            "name": "publishSource",
            "type": "radio",
            "label": "OpenAPI Document Source",
            "defaultValue": "CsharpAnnotationsGenerator",
            "required": true,
            "helpMarkDown": "Supported sources for acquiring OpenAPI document(s) to publish.\n\n**C# Annotations Generator**\nUse this option when OpenAPI documents are generated by [OpenAPI Document Tools build task](https://marketplace.visualstudio.com/items?itemName=ms-openapi.OpenApiDocumentTools) and present in the artifacts directory. The release task must be configured to *download artifacts* from your build.\n\n**Git Source Control**\nUse this option when fetching an OpenAPI document committed to a Git repository.\n\n**Web Service API**\nUse this option when fetching an OpenAPI document from a GET endpoint (e.g. Swashbuckle).",
            "options": {
                "CsharpAnnotationsGenerator": "C# Annotations Generator",
                "Git": "Git Source Control",
                "WebServiceApi": "Web Service API"
            },
            "groupName": "source"
        },
        {
            "name": "openApiDocumentSearchPath",
            "type": "filePath",
            "label": "Document Search Path",
            "defaultValue": "$(System.ArtifactsDirectory)",
            "required": true,
            "helpMarkDown": "Directory path where OpenAPI document(s) should be searched for. Be sure to override this value when multiple services have OpenAPI documents in your artifacts location.",
            "visibleRule": "publishSource=CsharpAnnotationsGenerator",
            "groupName": "source"
        },
        {
            "name": "csharpAnnotationsGeneratorOpenApiDocumentFileNamePatterns",
            "type": "multiLine",
            "label": "Document File Name Pattern(s)",
            "defaultValue": "**/OpenApiDocument.*.@(json|yaml)",
            "required": true,
            "properties": {
                "resizable": "true",
                "rows": "3"
            },
            "helpMarkDown": "Names of OpenAPI document and variant metadata files to publish.\n\n**Important**\n- We recommend using the default pattern when publishing documents generated by [OpenAPI Document Tools build task](https://marketplace.visualstudio.com/items?itemName=ms-openapi.OpenApiDocumentTools).\n- Each line should contain exactly one file name pattern.\n- File matching patterns may be used. [More Information](https://docs.microsoft.com/en-us/vsts/build-release/tasks/file-matching-patterns)\n- Files found will be read using UTF-8 encoding.",
            "visibleRule": "publishSource=CsharpAnnotationsGenerator",
            "groupName": "source"
        },
        {
            "name": "sourceGitAccount",
            "type": "string",
            "label": "Account Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Visual Studio Team Services account where OpenAPI document is stored. For example, **microsoft**.visualstudio.com (only the **prefix** should be specified).",
            "visibleRule": "publishSource=Git",
            "groupName": "source"
        },
        {
            "name": "sourceGitProjectName",
            "type": "string",
            "label": "Project Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Name of the project containing repository where OpenAPI document is stored.",
            "visibleRule": "publishSource=Git",
            "groupName": "source"
        },
        {
            "name": "sourceGitRepositoryName",
            "type": "string",
            "label": "Repository Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Name of the repository where OpenAPI document is stored.",
            "visibleRule": "publishSource=Git",
            "groupName": "source"
        },
        {
            "name": "sourceGitPath",
            "type": "string",
            "label": "Relative Path",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Relative path of the OpenAPI document in the repository with respect to the root.\n\nFor example\n*/documentation/serviceFoo/OpenApiDocument_v3.yaml*",
            "visibleRule": "publishSource=Git",
            "groupName": "source"
        },
        {
            "name": "sourceGitEncoding",
            "type": "pickList",
            "label": "Encoding",
            "defaultValue": "utf8",
            "required": true,
            "helpMarkDown": "Encoding of the OpenAPI document stored in Git. The content of the document will be read using this value. We support [NodeJS encodings](https://nodejs.org/api/buffer.html#buffer_buffers_and_character_encodings).",
            "options": {
                "ascii": "ascii",
                "base64": "base64",
                "binary": "binary",
                "hex": "hex",
                "latin1": "latin1",
                "ucs2": "ucs2",
                "utf16le": "utf16le",
                "utf8": "utf8"
            },
            "visibleRule": "publishSource=Git",
            "groupName": "source"
        },
        {
            "name": "useSystemAccessToken",
            "type": "boolean",
            "label": "Use system access token?",
            "defaultValue": true,
            "required": true,
            "helpMarkDown": "When set, this task will use **$(System.AccessToken)** when connecting to Git repository via VSTS REST API. Ensure **Allow scripts to access OAuth token** is selected within the **Agent phase** options. [More Information](https://docs.microsoft.com/en-us/vsts/build-release/actions/scripts/powershell?view=vsts#oauth)\n\nWhen not set, you will be prompted to add a custom connection for connecting to Git repository via VSTS REST API. You may need a custom connection when the repository is external, or when it has restricted permissions.",
            "visibleRule": "publishSource=Git",
            "groupName": "source"
        },
        {
            "name": "sourceGitTeamServicesEndpointId",
            "type": "connectedService:ExternalTfs",
            "label": "VSTS Connection",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The connection to use when interfacing with VSTS APIs.",
            "visibleRule": "publishSource=Git && useSystemAccessToken=false",
            "groupName": "source"
        },
        {
            "name": "webServiceApiUrl",
            "type": "string",
            "label": "URL",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Absolute URL to send GET request to in order to acquire OpenAPI document for publishing.",
            "visibleRule": "publishSource=WebServiceApi",
            "groupName": "source"
        },
        {
            "name": "publishDestination",
            "type": "radio",
            "label": "OpenAPI Document Destination",
            "defaultValue": "Git",
            "required": true,
            "helpMarkDown": "Supported destinations for publishing OpenAPI document(s) to.\n\n**Git Source Control**\nThis option will create a private branch containing your OpenAPI document adds/edits and a corresponding pull request to merge them into a target branch. The task does not push directly into the target branch for two reasons: (1) branch policies may be in place preventing direct pushes, and (2) promotes reviews of changes before they're merged.\n\nThe OpenAPI document file names committed are based on the Title within the document's Info object and have an extension reflecting the content's format (JSON or YAML).",
            "options": {
                "Git": "Git Source Control"
            },
            "groupName": "destination"
        },
        {
            "name": "destinationGitAccount",
            "type": "string",
            "label": "Account Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Visual Studio Team Services account where OpenAPI document is to be published. For example, **microsoft**.visualstudio.com (only the **prefix** should be specified).",
            "visibleRule": "publishDestination=Git",
            "groupName": "destination"
        },
        {
            "name": "destinationGitProjectName",
            "type": "string",
            "label": "Project Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Name of the project containing repository where OpenAPI document is to be published.",
            "visibleRule": "publishDestination=Git",
            "groupName": "destination"
        },
        {
            "name": "destinationGitRepositoryName",
            "type": "string",
            "label": "Repository Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Name of the repository where OpenAPI document is to be published.",
            "visibleRule": "publishDestination=Git",
            "groupName": "destination"
        },
        {
            "name": "destinationGitBranchName",
            "type": "string",
            "label": "Target Branch Name",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Name of the branch where OpenAPI document is to be published. For example, *develop* or *master* might be specified here. When no branch is specified, the default branch of the repository will be used.",
            "visibleRule": "publishDestination=Git",
            "groupName": "destination"
        },
        {
            "name": "destinationGitDirectoryPath",
            "type": "string",
            "label": "Relative Directory Path",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Relative directory path where OpenAPI document is to be published, with respect to the repository root.\n\nFor example\n*/documentation/serviceFoo*",
            "visibleRule": "publishDestination=Git",
            "groupName": "destination"
        },
        {
            "name": "destinationGitTeamServicesEndpointId",
            "type": "connectedService:ExternalTfs",
            "label": "VSTS Connection",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The connection to use when interfacing with VSTS APIs. An access token with `vso.code_manage` [scope](https://docs.microsoft.com/en-us/vsts/integrate/get-started/authentication/oauth?view=vsts#scopes) is required. This allows the task to create a private branch, push changes, and create a pull request in your repository.",
            "visibleRule": "publishDestination=Git",
            "groupName": "destination"
        },
        {
            "name": "destinationGitIntermediateBranchName",
            "type": "string",
            "label": "Intermediate Branch Name",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Optionally specify an intermediate branch to create for staging the OpenAPI document(s), so they can be merged into the *Target Branch*. An existing branch may **not** be used. For example, *someBranch* or *some/path/branch* might be specified here.\n\nWhen none is specified, a branch will be created at the root of the repository with a randomized name to avoid collision.",
            "visibleRule": "publishDestination=Git",
            "groupName": "destination"
        },
        {
            "name": "destinationGitAddRandomSuffixToIntermediateBranchName",
            "type": "boolean",
            "label": "Add randomized suffix to intermediate branch name?",
            "defaultValue": false,
            "required": false,
            "helpMarkDown": "When set, a randomized token will be appended to the *Intermediate Branch Name*. Use this feature to avoid the task failing due to existing branch collision, which is likely to occur in Continuous Delivery scenarios.",
            "visibleRule": "publishDestination=Git && destinationGitIntermediateBranchName != \"\"",
            "groupName": "destination"
        }
    ],
    "execution": {
        "Node": {
            "target": "Index.js"
        }
    }
}