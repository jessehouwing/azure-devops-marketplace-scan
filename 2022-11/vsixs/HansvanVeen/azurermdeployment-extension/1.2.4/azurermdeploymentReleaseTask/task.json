{
  "id": "dcdb678b-c1d5-4efc-94f2-b683b3b4320b",
  "name": "AzureRmDeployment",
  "friendlyName": "AzureRm Template Deployment",
  "description":  "AzureRm Deployment extension to deploy a resource(group) using ARM templates",
  "helpMarkDown": "The AzureRm Deployment extension uses the New-AzureRmDeployment Powershell cmdlet to deploy a resources (including Resource Groups) using ARM templates",
  "category": "Pipelines",
  "visibility": [
    "Build",
    "Release"
  ],
  "author": "Hans van Veen",
  "version": {
    "Major": 1,
    "Minor": 2,
    "Patch": 2
  },
  "instanceNameFormat": "AzureRmDeployment",
  "groups": [
    {
      "name": "AzureDetails",
      "displayName": "Azure Details",
      "isExpanded": true
    },
    {
      "name": "Template",
      "displayName": "Template",
      "isExpanded": true
    },
    {
      "name": "Logging",
      "displayName": "Logging options",
      "isExpanded": true
    }
  ],
  "inputs": [
    {
      "name": "ConnectedServiceName",
      "aliases": ["azureSubscription"],
      "type": "connectedService:AzureRM",
      "label": "Azure subscription",
      "defaultValue": "",
      "required": true,
      "groupName": "AzureDetails",
      "helpMarkDown": "Select the Azure Resource Manager subscription for the deployment."
    },
    {
      "name": "resourceLocation",
      "type": "string",
      "label": "Location",
      "defaultValue": "West Europe",
      "required": true,
      "groupName": "AzureDetails",
      "helpMarkDown": "Location for deploying the resource."
    },
    {
      "name": "templateLocation",
      "type": "pickList",
      "label": "Template location",
      "required": true,
      "defaultValue": "Linked artifact",
      "groupName": "Template",
      "options": {
        "Linked artifact": "Linked artifact",
        "URL of the file": "URL of the file"
      }
    },
    {
      "name": "csmFileLink",
      "type": "string",
      "label": "Template link",
      "defaultValue": "",
      "required": true,
      "groupName": "Template",
      "helpMarkDown": "Specify the URL of the template file. Example: [https://raw.githubusercontent.com/Azure/...](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-vm-simple-windows/azuredeploy.json) \n\nTo deploy a template stored in a private storage account, retrieve and include the shared access signature (SAS) token in the URL of the template. Example: `<blob_storage_url>/template.json?<SAStoken>` To upload a template file (or a linked template) to a storage account and generate a SAS token, you could use [Azure file copy](https://aka.ms/azurefilecopyreadme) task or follow the steps using [PowerShell](https://go.microsoft.com/fwlink/?linkid=838080) or [Azure CLI](https://go.microsoft.com/fwlink/?linkid=836911).\n\nTo  view the template parameters in a grid, click on “…” next to Override template parameters text box. This feature requires that CORS rules are enabled at the source. If templates are in Azure storage blob, refer to [this](https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/Cross-Origin-Resource-Sharing--CORS--Support-for-the-Azure-Storage-Services?redirectedfrom=MSDN#understanding-cors-requests) to enable CORS.",
      "visibleRule": "templateLocation = URL of the file"
    },
    {
      "name": "csmParametersFileLink",
      "type": "string",
      "label": "Template parameters link",
      "defaultValue": "",
      "required": true,
      "groupName": "Template",
      "helpMarkDown": "Specify the URL of the parameters file. Example: [https://raw.githubusercontent.com/Azure/...](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-vm-simple-windows/azuredeploy.parameters.json) \n\nTo use a file stored in a private storage account, retrieve and include the shared access signature (SAS) token in the URL of the template. Example: `<blob_storage_url>/template.json?<SAStoken>` To upload a parameters file to a storage account and generate a SAS token, you could use [Azure file copy](https://aka.ms/azurefilecopyreadme) task or follow the steps using [PowerShell](https://go.microsoft.com/fwlink/?linkid=838080) or [Azure CLI](https://go.microsoft.com/fwlink/?linkid=836911). \n\nTo  view the template parameters in a grid, click on “…” next to Override template parameters text box. This feature requires that CORS rules are enabled at the source. If templates are in Azure storage blob, refer to [this](https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/Cross-Origin-Resource-Sharing--CORS--Support-for-the-Azure-Storage-Services?redirectedfrom=MSDN#understanding-cors-requests) to enable CORS.",
      "visibleRule": " templateLocation = URL of the file"
    },
    {
      "name": "csmFile",
      "type": "filePath",
      "label": "Template",
      "defaultValue": "",
      "required": true,
      "groupName": "Template",
      "visibleRule": " templateLocation = Linked artifact",
      "helpMarkDown": "Specify the path or a pattern pointing to the Azure Resource Manager template. For more information about the templates see https://aka.ms/azuretemplates. To get started immediately use template https://aka.ms/sampletemplate."
    },
    {
      "name": "csmParametersFile",
      "type": "filePath",
      "label": "Template parameters",
      "defaultValue": "",
      "required": true,
      "groupName": "Template",
      "helpMarkDown": "Specify the path or a pattern pointing for the parameters file for the Azure Resource Manager template.",
      "visibleRule": " templateLocation = Linked artifact"
    },
    {
      "name": "extendedLogging",
      "type": "boolean",
      "label": "Extended logging",
      "defaultValue": "false",
      "required": true,
      "groupName": "Logging",
      "helpMarkDown": "Select to enable extended logging in the deployment output"
    }
  ],
  "dataSourceBindings": [
    {
      "target": "resourceGroupName",
      "endpointId": "$(connectedServiceNameARM)",
      "dataSourceName": "AzureResourceGroups"
    },
    {
      "target": "resourceLocation",
      "endpointId": "$(ConnectedServiceName)",
      "dataSourceName": "AzureLocations"
    }
  ],
  "execution": {
    "PowerShell3": {
      "target": "$(currentDirectory)\\azurermdeployment.ps1"
    }
  },
  "messages": {
    "ScriptReturnCode": "Script exited with return code: %d",
    "ScriptFailed": "Script failed with error: %s",
    "UnsupportedEndpointScheme": "Unsupported service connection authorization scheme: Service Principal for AzureRM",
    "AzureSDKNotFound": "Azure CLI 2.x is not installed on this machine.",
    "FailedToLogout": "The following error occurred while logging out: %s",
    "CheckResourceGroupExistence": "Checking if the following resource group exists: %s.",
    "ResourceGroupStatusFetchFailed": "Failed to check the resource group status. Error: %s.",
    "ResourceGroupStatus": "Resource group exists: %s.",
    "ResourceGroupCreationFailed": "Failed to create the resource group. Error: %s",
    "CreatingNewRG": "Creating resource Group: %s",
    "CreatedRG": "Resource Group created successfully.",
    "CreatingTemplateDeployment": "Creating deployment parameters.",
    "TemplateParsingFailed": "Ensure the Template file ( '%s' ) is valid. Task failed while parsing with following error: %s",
    "FileFetchFailed": "Failed to download the file. URL: '%s'. Error: %s",
    "ParametersFileParsingFailed": "Ensure the Parameters file ( '%s' ) is valid. Task failed while parsing with following error: %s",
    "StartingDeployment": "Starting Deployment.",
    "CreateTemplateDeploymentSucceeded": "Successfully deployed the template.",
    "CreateTemplateDeploymentFailed": "Task failed while creating or updating the template deployment.",
    "ErrorsInYourDeployment": "There were errors in your deployment. Error code: %s.",
    "Details": "Details:",
    "ErrorType": "Error Type:",
    "PolicyDefinitionName": "Policy Definition Name :",
    "PolicyAssignmentName": "Policy Assignment Name :",
    "StartingValidation": "Starting template validation.",
    "ValidDeployment": "Template deployment validation was completed successfully.",
    "CreateTemplateDeploymentValidationFailed": "Template validation failed. Error: %s.",
    "TemplateValidationHadErrors": "Task failed while validating the template deployment.",
    "DeletingResourceGroup": "Deleting resource group: %s",
    "CouldNotDeletedResourceGroup": "Could not delete resource group: '%s'. Operation failed with error: %s",
    "DeletedResourceGroup": "Deleted resource group: %s",
    "VM_ListFetchFailed": "Failed to fetch the list of virtual machines from resource group: %s. Error: %s",
    "NoVMsFound": "No virtual machines found in the resource group.",
    "VM_Start": "Starting virtual machine: %s",
    "VM_Restart": "Restarting virtual machine: %s",
    "VM_Stop": "Stopping virtual machine: %s",
    "VM_Deallocate": "Deallocating virtual machine: %s",
    "VM_Delete": "Deleting virtual machine: %s",
    "SucceededOnVMOperation": "Operation: '%s' succeeded on all the virtual machines.",
    "FailureOnVMOperation": "Operation: '%s' did not succeed on all the virtual machines. Errors: \n%s",
    "VirtualMachineNameAndError": "%s: %s",
    "RegisteringEnvironmentVariable": "Selecting the resource group details: %s.",
    "FailedToFetchNetworkInterfaces": "Failed to fetch the list of network interfaces. Error: %s.",
    "FailedToFetchLoadBalancers": "Failed to fetch the list of load balancers. Error: %s.",
    "FailedToFetchPublicAddresses": "Failed to fetch the list of public addresses. Error: %s.",
    "AddedToOutputVariable": "Resource group details were saved in following output variable: %s.",
    "InvalidAction": "This action is not defined. Check with the task author.",
    "TaskNotFound": "Task.json file could not be found: %s",
    "ARGD_ConstructorFailed": "Task failed while initializing. Error: %s",
    "RuleExistsAlready": "Rule %s already exists on the security group '%s'",
    "AddExtension": "Adding extension '%s' on virtual machine '%s'",
    "DeleteExtension": "Trying to delete extension %s from virtual machine %s",
    "FailedToAddExtension": "Failed to add the network security rule with exception: %s",
    "AddingSecurityRuleNSG": "Adding security rule for the network security group: %s",
    "AddedSecurityRuleNSG": "Added inbound network security rule config %s with priority %s for port %s under security group %s with result: %s",
    "FailedAddingNSGRule3Times": "Failed to add the network security rule to the security group %s after trying 3 times",
    "FailedToDeleteExtension": "Deletion of extension failed",
    "CredentialsCannotBeNull": "'credentials' cannot be null.",
    "SubscriptionIdCannotBeNull": "'subscriptionId' cannot be null.",
    "CallbackCannotBeNull": "callback cannot be null.",
    "ResourceGroupCannotBeNull": "resourceGroupName cannot be null or undefined and it must be of type string.",
    "ResourceGroupExceededLength": "\"resourceGroupName\" should satisfy the constraint - \"MaxLength\": 90",
    "ResourceGroupDeceededLength": "\"resourceGroupName\" should satisfy the constraint - \"MinLength\": 1",
    "ResourceGroupDoesntMatchPattern": "\"resourceGroupName\" should satisfy the constraint - \"Pattern\": /^[-\\w\\._\\(\\)]+$/",
    "ParametersCannotBeNull": "parameters cannot be null or undefined.",
    "DeploymentNameCannotBeNull": "deploymentName cannot be null or undefined and it must be of type string.",
    "VMNameCannotBeNull": "vmName cannot be null or undefined and it must be of type string.",
    "InvalidValue": "%s is not a valid value. The valid values are: %s",
    "VmExtensionNameCannotBeNull": "vmExtensionName cannot be null or undefined and it must be of type string.",
    "ExpandShouldBeOfTypeString": "expand must be of type string.",
    "ExtensionParametersCannotBeNull": "extensionParameters cannot be null or undefined.",
    "ClientIdCannotBeEmpty": "clientId must be a non empty string.",
    "DomainCannotBeEmpty": "domain must be a non empty string.",
    "SecretCannotBeEmpty": "secret must be a non empty string.",
    "armUrlCannotBeEmpty": "arm URL must be a non empty string.",
    "authorityUrlCannotBeEmpty": "authority must be a non empty string.",
    "LoadBalancerNameCannotBeNull": "'loadBalancerName cannot be null or undefined and it must be of type string.'",
    "NetworkInterfaceNameCannotBeNull": "networkInterfaceName cannot be null or undefined and it must be of type string.",
    "NetworkSecurityGroupNameCannotBeNull": "networkSecurityGroupName cannot be null or undefined and it must be of type string.",
    "SecurityRuleNameCannotBeNull": "securityRuleName cannot be null or undefined and it must be of type string.",
    "SecurityRuleParametersCannotBeNull": "securityRuleParameters cannot be null or undefined.",
    "OutputVariableShouldNotBeEmpty": "Output variable should not be empty.",
    "ARG_SetExtensionFailedForVm": "Standard Error Message: Failed to set extension on Virtual Machine %s. Error: %s",
    "InvalidResponseLongRunningOperation": "Invalid response received for fetching status of a long running operation.",
    "AddingInboundNatRule": "Adding Inbound Nat Rule for the Virtual Machine %s to the Load Balancer %s",
    "InboundNatRuleAdditionFailed": "Addition of Inbound Nat Rule to the Load Balancer %s failed. Error: %s ",
    "InboundNatRulesToNICFailed": "Addition of rule Id to the loadBalancerInboundNatRules of nic %s failed with the error: %s",
    "AddedTargetInboundNatRuleLB": "Added the target virtual machine for the inbound NAT rules of load balancer %s",
    "FailedToFetchInstanceViewVM": "Failed to fetch the instance view of the virtual machine. Error : %s",
    "CreationOfExtensionFailed": "Failed to add the extension to the vm: '%s'. Error: %s",
    "AddedExtension": "Successfully added the WinRMCustomScriptExtension for the virtual Machine %s",
    "AddingExtensionSucceeded": "Addition of extension on vm %s succeeded",
    "DeletionSucceeded": "Deletion of extension on vm %s succeeded",
    "AdditionFailed": "Addition of %s on vm %s failed. Error : %s",
    "DeletionFailed": "Deletion of %s on vm %s failed. Error : %s",
    "DeleteAgentManually": "After the task execution completes, if the deployment group agent corresponding to the virtual machine %s is present but not active in the deployment group %s, then please delete it manually from the deployment group.",
    "DGAgentOperationOnAllVMsFailed": "Deployment group agent %s did not succeed on all VMs. %s",
    "DGAgentAddedOnAllVMs": "Deployment group agent added on all virtual machines of the resource group",
    "DGAgentDeletedFromAllVMs": "Deployment group agent deleted from all virtual machines of the resource group",
    "DGAgentHandlerMajorVersion": "Deployment group extension handler major version is 1",
    "VMStartFailed": "Could not start the virtual machine %s. Error : %s",
    "VMStarted": "Started virtual machine: %s",
    "VMTransitioningSkipExtensionAddition": "Virtual machine %s is in a transitioning state. Skipping adding extension on it.",
    "VMDetailsFetchFailed": "Could not get details of virtual machine %s. Error : %s",
    "VMDetailsFetchSucceeded": "Fetched details of virtual machine %s.",
    "AddingDGAgentOnVMs": "Adding deployment group agent on the resource group virtual machines.",
    "DeletingDGAgentOnVMs": "Deleting deployment group agent on virtual machines",
    "AddingExtensionFailed": "Addition of extension on vm %s failed",
    "TimeoutWhileWaiting": "Timed out while waiting",
    "InvalidTemplateLocation": "The template location supplied is invalid. Task only supports 'Linked artifact' or 'URL of the file'",
    "EncodingNotSupported": "Encoding of the file '%s' is '%s' which is not supported. Supported file encodings are ['utf-8', 'utf-16le']",
    "CouldNotDetectEncoding": "Could not detect encoding of file '%s'",
    "DetectedFileEncoding": "The detected encoding for file '%s' is '%s'",
    "HostUrlCannotBeEmpty": "Host URL must be a non empty string.",
    "PatTokenCannotBeEmpty": "Personal access token must be a non empty string.",
    "OnlyTokenAuthAllowed": "Service connection can be of Token authorization type only.",
    "DeploymentGroupEndpointUrlCannotBeEmpty": "Deployment group service connection URL cannot be empty",
    "DeploymentGroupEndpointPatTokenCannotBeEmpty": "Deployment group service connection personal access token cannot be empty",
    "ErrorWhileParsingParameter": "There was an error while overriding '%s' parameter because of '%s', make sure it follows JavaScript Object Notation (JSON)",
    "TemplateFilePatternMatchingMoreThanOneFile": "Found multiple files matching template file pattern: %s",
    "TemplateParameterFilePatternMatchingMoreThanOneFile": "Found multiple files matching template parameters file pattern: %s",
    "TemplateFilePatternMatchingNoFile": "Could not find any file matching the template file pattern",
    "TemplateParameterFilePatternMatchingNoFile": "Could not find any file matching the template file pattern",
    "ParametersPatternMatchesADirectoryInsteadOfAFile": "Parameters file pattern matches a directory instead of a file.",
    "CsmFilePatternMatchesADirectoryInsteadOfAFile": "Template file pattern matches a directory instead of a file: %s",
    "ResourceNameCannotBeNull": "Resource name cannot be null.",
    "ProvisioningStatusOfExtensionIsNotSucceeded": "Provisioning State of WinRMCustomScriptExtension is not succeeded on vm: '%s'.",
    "ListingOfExtensionsFailed": "Failed to list the extensions for the vm: '%s'. Error '%s'",
    "ExtensionNotFound": "Extension not found on the vm: %s",
    "AddedOutputVariable": "Updated output variable '%s', which contains the outputs section of the current deployment object in string format.",
    "UnableToFetchAuthorityURL": "Unable to fetch authority URL.",
    "UnableToFetchActiveDirectory": "Unable to fetch Active Directory resource ID.",
    "SpecifiedAzureRmEndpointIsInvalid": "Specified AzureRm service connection URL: '{0}' is invalid.",
    "FailedToFetchAzureStackDependencyData": "Failed to fetch azure stack dependency data, error message: {0}",
    "UnableToReadResponseBody": "Unable to read response body. Error: %s",
    "CouldNotFetchAccessTokenforAzureStatusCode": "Could not fetch access token for Azure. Status code: %s, status message: %s",
    "CouldNotFetchAccessTokenforMSIDueToMSINotConfiguredProperlyStatusCode": "Could not fetch access token for Managed Service Principal. Please configure Managed Service Identity (MSI) for virtual machine 'https://aka.ms/azure-msi-docs'. Status code: %s, status message: %s",
    "CouldNotFetchAccessTokenforMSIStatusCode": "Could not fetch access token for Managed Service Principal. Status code: %s, status message: %s",
    "UserNameCannotBeNull": "If the 'Run agent service as a user' input is selected, then 'User name' cannot be null.",
    "ASE_SSLIssueRecommendation": "To use a certificate, the certificate must be signed by a trusted certificate authority. If getting certificate validation errors, you're probably using a self-signed certificate and to resolve them you need to set a variable named VSTS_ARM_REST_IGNORE_SSL_ERRORS to the value true in the build or release pipeline.",
    "MoreInformationOnAzurePortal": "More information on Azure Portal",
    "ResponseNotValid": "Response is not in a valid format"
  }
}