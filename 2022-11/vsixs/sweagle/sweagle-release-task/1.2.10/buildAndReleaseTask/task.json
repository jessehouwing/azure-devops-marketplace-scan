{"$schema":"https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json","id":"78e4b2ca-8ebd-4147-9be2-26f3d9f271a4","name":"sweagle","friendlyName":"Sweagle","description":"Manage, Validate and Secure your configuration data with ServiceNow Sweagle","helpMarkDown":"","category":"Utility","author":"ServiceNow","version":{"Major":"1","Minor":"2","Patch":"10"},"instanceNameFormat":"Sweagle $(operation)","groups":[{"name":"apiArgsGroup","displayName":"API arguments","isExpanded":true},{"name":"tenantGroup","displayName":"Tenant information","isExpanded":false},{"name":"proxyGroup","displayName":"Proxy information","isExpanded":false}],"inputs":[{"name":"tenant","type":"string","label":"Tenant","defaultValue":"","required":true,"helpMarkDown":"Sweagle host you plan to connect to like xyz.sweagle.com.","groupName":"tenantGroup"},{"name":"port","type":"string","label":"Sweagle Port","defaultValue":"443","required":true,"helpMarkDown":"Sweagle port of the host you plan to connect to (default is 443 for HTTPS).","groupName":"tenantGroup"},{"name":"token","type":"string","label":"Token","defaultValue":"$(SWEAGLE_TOKEN)","required":true,"helpMarkDown":"Sweagle token used to connect to your tenant with sufficient privileges. It is recommended to store as secret variable.","groupName":"tenantGroup"},{"name":"allowInsecure","type":"boolean","label":"Allow Self Signed","defaultValue":"false","required":false,"helpMarkDown":"Check this box if your SSL certificate is self signed or not issued by recognized CA.","groupName":"tenantGroup"},{"name":"proxyHost","type":"string","label":"Proxy Host","required":false,"helpMarkDown":"Proxy host example.proxy.com.","groupName":"proxyGroup"},{"name":"proxyPort","type":"string","label":"Proxy Port","defaultValue":"","required":false,"helpMarkDown":"Proxy port in the format 1533.","groupName":"proxyGroup"},{"name":"proxyUser","type":"string","label":"Proxy User","required":false,"helpMarkDown":"User account used to connect to proxy.","groupName":"proxyGroup"},{"name":"proxyPassword","type":"string","label":"Proxy Password","required":false,"helpMarkDown":"User password used to connect to proxy.","groupName":"proxyGroup"},{"name":"operation","type":"pickList","label":"Operation","defaultValue":"info","options":{"info":"Check connection and get info from your tenant","upload":"Upload a file to your tenant","uploadFiles":"Upload list of files to your tenant","validate":"Validate your configuration with specified validator","validationStatus":"Get validation status for your configuration","snapshot":"Snapshot a configuration","export":"Export one configuration","exportFiles":"Export list of files"},"required":true,"helpMarkDown":"Sweagle operation you want to realize (default is to check connection to your tenant). Export list of files is based on data previously imported with 'Upload list' operation","groupName":"apiArgsGroup"},{"name":"cds","type":"string","label":"Configuration Data Set (CDS)","required":true,"helpMarkDown":"Sweagle configuration data set on which you will perform your operation.","groupName":"apiArgsGroup","visibleRule":"operation != info && operation != upload && operation != uploadFiles"},{"name":"dirPath","type":"filePath","label":"Input Files Glob","required":true,"helpMarkDown":"Glob expression to upload several files. Ex: use <path>/*.<extension> to import all files with <extension> from <path>, or <path>/**/*.<extension> to do recursive search of all files in children directories.","groupName":"apiArgsGroup","visibleRule":"operation = uploadFiles"},{"name":"filePath","type":"filePath","label":"Input File Path","required":true,"helpMarkDown":"Path of the input file to upload to Sweagle.","groupName":"apiArgsGroup","visibleRule":"operation = upload"},{"name":"filesList","type":"string","label":"Files List","required":true,"helpMarkDown":"List of files you want to export in format '[file1, file2, ...]'. They should be recognized as unique nodes in your CDS.","groupName":"apiArgsGroup","visibleRule":"operation = exportFiles"},{"name":"nodePath","type":"string","label":"Node Path","required":true,"helpMarkDown":"The comma-separated path of the node to upload the data.","groupName":"apiArgsGroup","visibleRule":"operation = upload || operation = uploadFiles"},{"name":"format","type":"pickList","label":"Format","defaultValue":"json","options":{"ini":"INI","json":"JSON","props":"PROPERTIES","raw":"RAW (export only)","xml":"XML","yaml":"YAML"},"required":true,"helpMarkDown":"Format of the configuration data file. For upload or export list of files, format is taken from file extension, and this value represents default value if extension is unknown.","groupName":"apiArgsGroup","visibleRule":"operation = export || operation = exportFiles || operation = upload || operation = uploadFiles"},{"name":"exporter","type":"string","label":"Exporter","defaultValue":"all","required":true,"helpMarkDown":"Exporter used to export your configuration.","groupName":"apiArgsGroup","visibleRule":"operation = export"},{"name":"exporterListOfFiles","type":"string","label":"Exporter","defaultValue":"returnDataForPath","required":true,"helpMarkDown":"Exporter used to get each file of the list. It should be present in your tenant. Don't change default value if not sure.","groupName":"apiArgsGroup","visibleRule":"operation = exportFiles"},{"name":"validator","type":"string","label":"Validator","defaultValue":"","required":true,"helpMarkDown":"Validator used to check your configuration.","groupName":"apiArgsGroup","visibleRule":"operation = validate"},{"name":"arg","type":"string","label":"Parser Custom Arguments","defaultValue":"","required":false,"helpMarkDown":"Parser custom arguments in object notation (JSON, XML or YAML) or comma separated list.","groupName":"apiArgsGroup","visibleRule":"operation = validate || operation = export"},{"name":"allowDelete","type":"boolean","label":"Allow Delete","defaultValue":"false","required":false,"helpMarkDown":"To allow the deletion of existing data or not.","groupName":"apiArgsGroup","visibleRule":"operation = upload || operation = uploadFiles"},{"name":"arraySupport","type":"boolean","label":"Support for Arrays","defaultValue":"false","required":false,"helpMarkDown":"Add better support of arrays or list in exported response.","groupName":"apiArgsGroup","visibleRule":"operation = export || operation = exportFiles"},{"name":"autoRecognize","type":"boolean","label":"Auto Recognize","defaultValue":"false","required":false,"helpMarkDown":"To run the machine learning type recognition after the upload.","groupName":"apiArgsGroup","visibleRule":"operation = upload || operation = uploadFiles"},{"name":"autoApprove","type":"boolean","label":"Auto Approve","defaultValue":"true","required":false,"helpMarkDown":"To auto-approve the changeset or not.","groupName":"apiArgsGroup","visibleRule":"operation = upload || operation = uploadFiles"},{"name":"convertPath","type":"boolean","label":"Convert Path","defaultValue":"false","required":false,"helpMarkDown":"When importing files, to convert any folder in file path to a node in data model, and vice-versa when exporting.","groupName":"apiArgsGroup","visibleRule":"operation = exportFiles || operation = uploadFiles"},{"name":"cdsArgs","type":"string","label":"Parser extra CDS (comma separated)","defaultValue":"","required":false,"helpMarkDown":"Additional configuration data sets (CDS) used in parser, CDS names comma separated.","groupName":"apiArgsGroup","visibleRule":"operation = export || operation = exportFiles || operation = validate"},{"name":"cdsTags","type":"string","label":"Parser tags for extra CDS (comma separated)","defaultValue":"","required":false,"helpMarkDown":"Tags of the additional configuration data sets (CDS) used in parser, comma separated.","groupName":"apiArgsGroup","visibleRule":"operation = export || operation = exportFiles || operation = validate"},{"name":"changeset","type":"string","label":"Changeset Id","defaultValue":"","required":false,"helpMarkDown":"Open changeset Id to add these changes to.","groupName":"apiArgsGroup","visibleRule":"operation = upload || operation = uploadFiles"},{"name":"description","type":"string","label":"Description","defaultValue":"","required":false,"helpMarkDown":"Description to add","groupName":"apiArgsGroup","visibleRule":"operation = snapshot || operation = upload || operation = uploadFiles"},{"name":"encoding","type":"string","label":"Encoding","defaultValue":"UTF-8","required":false,"helpMarkDown":"The encoding of the upload data. Default UTF-8","groupName":"apiArgsGroup","visibleRule":"operation = upload || operation = uploadFiles"},{"name":"forIncoming","type":"boolean","label":"For Incoming","defaultValue":"false","required":false,"helpMarkDown":"Use validation for pending data or for last snapshot data (default).","groupName":"apiArgsGroup","visibleRule":"operation = validate || operation = validationStatus"},{"name":"identifierWords","type":"string","label":"Identifier Words","required":false,"helpMarkDown":"This parameter can be used for XML, JSON, or YAML files to uniquely identify a data item in a list or an array. Uniqueness allows listed data to be exported properly.","groupName":"apiArgsGroup","visibleRule":"operation = upload || operation = uploadFiles"},{"name":"xmlTestResult","type":"boolean","label":"XML Test Result File","defaultValue":"true","required":false,"helpMarkDown":"If a test result file (format './testResult*.xml') should also be generated. In this case, it will follow the XML Junit output format (default is true).","groupName":"apiArgsGroup","visibleRule":"operation = validate || operation = validationStatus"},{"name":"onlyParent","type":"boolean","label":"Only Parent","defaultValue":"false","required":false,"helpMarkDown":"To restrict allow delete to only parent node.","groupName":"apiArgsGroup","visibleRule":"operation = upload || operation = uploadFiles"},{"name":"outputPath","type":"string","label":"Output Path","required":false,"helpMarkDown":"Root path to store result of the export","groupName":"apiArgsGroup","visibleRule":"operation = exportFiles"},{"name":"outputFile","type":"string","label":"Output File","required":false,"helpMarkDown":"File to store result of the export.","groupName":"apiArgsGroup","visibleRule":"operation = export"},{"name":"createSubFolders","type":"boolean","label":"Create Subfolders","defaultValue":"false","required":false,"helpMarkDown":"Create subfolders if they don't exist.","groupName":"apiArgsGroup","visibleRule":"operation = export || operation = exportFiles"},{"name":"addBOM","type":"boolean","label":"Add BOM","defaultValue":"false","required":false,"helpMarkDown":"Add BOM characters to output (default is false).","groupName":"apiArgsGroup","visibleRule":"operation = export || operation = exportFiles"},{"name":"skipInNodeName","type":"string","label":"Skip in Node Name","defaultValue":"$(Pipeline.Workspace)/s","required":false,"helpMarkDown":"Replace value here by '.' in target Sweagle node name. This is to avoid too long name when not required.","groupName":"apiArgsGroup","visibleRule":"operation = uploadFiles"},{"name":"storeSnapshotResults","type":"boolean","label":"Store Snapshot Results","defaultValue":"false","required":false,"helpMarkDown":"To store a new snapshot or not.","groupName":"apiArgsGroup","visibleRule":"operation = upload"},{"name":"tag","type":"string","label":"Tag","required":false,"helpMarkDown":"CDS snapshot (release) tag, string without space.","groupName":"apiArgsGroup","visibleRule":"operation = export || operation = exportFiles || operation = snapshot || operation = upload"},{"name":"useAsynchronous","type":"boolean","label":"Asynchronous Upload","defaultValue":"false","required":false,"helpMarkDown":"By default, upload of multiple files is done in synchronous way to avoid changesets conflicts. To improve performance, you may want to do it in parrallel.","groupName":"apiArgsGroup","visibleRule":"operation = uploadFiles"},{"name":"useSingleChangeset","type":"boolean","label":"Single Changeset","defaultValue":"false","required":false,"helpMarkDown":"Use one changeset for the full upload (more performant for some use cases) or one changeset per file (less risks of conflict).","groupName":"apiArgsGroup","visibleRule":"operation = uploadFiles"},{"name":"validationLevel","type":"pickList","options":{"validOnly":"Only if valid","warn":"Only if valid or warnings","error":"Even with errors (ie always)"},"label":"Snapshot Validation Level","required":false,"helpMarkDown":"Validation level to snapshot configuration.","groupName":"apiArgsGroup","visibleRule":"operation = snapshot || operation = upload || operation = uploadFiles"},{"name":"withCustomValidations","type":"boolean","label":"With Custom Validations","defaultValue":"true","required":false,"helpMarkDown":"To get the custom validations in the response.","groupName":"apiArgsGroup","visibleRule":"operation = validationStatus"}],"execution":{"Node10":{"target":"index.js"}}}
