{
  "$schema": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
  "id": "d98b873d-cf18-41eb-8ff5-234f14697896",
  "name": "dependabot",
  "friendlyName": "Dependabot",
  "description": "Automatically update dependencies and vulnerabilities in your code",
  "helpMarkDown": "For help please visit https://github.com/tinglesoftware/dependabot-azure-devops",
  "category": "Utility",
  "visibility": [
    "Build",
    "Release"
  ],
  "runsOn": [
    "Agent",
    "DeploymentGroup"
  ],
  "author": "Tingle Software",
  "demands": [
    "docker"
  ],
  "version": {
    "Major": 1,
    "Minor": "10",
    "Patch": "273"
  },
  "instanceNameFormat": "Dependabot",
  "minimumAgentVersion": "2.105.0",
  "groups": [
    {
      "name": "approval_completion",
      "displayName": "Auto Approval and Auto Completion or PRs",
      "isExpanded": false
    },
    {
      "name": "github",
      "displayName": "GitHub authentication",
      "isExpanded": false
    },
    {
      "name": "advanced",
      "displayName": "Advanced",
      "isExpanded": false
    }
  ],
  "inputs": [
    {
      "name": "useConfigFile",
      "type": "boolean",
      "label": "Use Dependabot YAML file",
      "defaultValue": "false",
      "required": false,
      "helpMarkDown": "Determines if the task will pick config values specified from the yaml file located at `.github/dependabot.yml`"
    },
    {
      "name": "forwardHostSshSocket",
      "type": "boolean",
      "label": "Forward the host ssh socket",
      "defaultValue": "false",
      "required": false,
      "helpMarkDown": "Ensure that the host ssh socket is forwarded to the container to authenticate with ssh"
    },
    {
      "name": "packageManager",
      "type": "pickList",
      "label": "Package Ecosystem",
      "helpMarkDown": "The package ecosystem to check updates for. Learn more [here](https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/configuration-options-for-dependency-updates#package-ecosystem).",
      "defaultValue": "nuget",
      "required": true,
      "options": {
        "bundler": "Bundler",
        "cargo": "Cargo",
        "composer": "Composer",
        "docker": "docker",
        "hex": "Elixir",
        "elm": "Elm",
        "gitsubmodule": "git submodule",
        "github-actions": "GitHub Actions",
        "gomod": "Go modules",
        "gradle": "Gradle",
        "maven": "Maven",
        "mix": "Mix",
        "npm": "npm",
        "nuget": "NuGet",
        "pip": "pip",
        "terraform": "Terraform"
      },
      "visibleRule": "useConfigFile=false"
    },
    {
      "name": "directory",
      "type": "string",
      "label": "Directory",
      "required": false,
      "helpMarkDown": "Set the directory from where Dependabot should check for updates. Examples: `/` for root, `/src` for src folder.",
      "visibleRule": "useConfigFile=false"
    },
    {
      "name": "targetBranch",
      "type": "string",
      "label": "Target Branch",
      "required": false,
      "helpMarkDown": "The branch to be targeted when creating pull requests. When not specified, Dependabot will resolve the default branch of the repository. Examples: `master`, `main`, `develop`",
      "visibleRule": "useConfigFile=false"
    },
    {
      "name": "openPullRequestsLimit",
      "type": "int",
      "label": "Limit number of open pull requests for version updates.",
      "required": false,
      "defaultValue": "5",
      "helpMarkDown": "The maximum number of open pull requests to have at any one time. Defaults to 5.",
      "visibleRule": "useConfigFile=false"
    },
    {
      "name": "versioningStrategy",
      "type": "pickList",
      "label": "Versioning Strategy",
      "defaultValue": "auto",
      "required": true,
      "helpMarkDown": "The versioning strategy to use. Learn more [here](https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/configuration-options-for-dependency-updates#versioning-strategy).",
      "options": {
        "auto": "auto",
        "lockfile-only": "lockfile-only",
        "widen": "widen",
        "increase": "increase",
        "increase-if-necessary": "increase-if-necessary"
      },
      "visibleRule": "useConfigFile=false"
    },
    {
      "name": "failOnException",
      "type": "boolean",
      "label": "Determines if the execution should fail when an exception occurs. Defaults to `true`",
      "defaultValue": true,
      "required": false,
      "helpMarkDown": "When set to true, a failure in updating a single dependency will cause the container execution to fail thereby causing the task to fail. This is important when you want a single failure to prevent trying to update other dependencies."
    },
    {
      "name": "milestone",
      "type": "string",
      "label": "Work item identifier to be linked to the Pull Requests.",
      "required": false,
      "helpMarkDown": "The identifier of the work item to be linked to the Pull Requests that dependabot creates."
    },
    {
      "name": "setAutoComplete",
      "type": "boolean",
      "groupName": "approval_completion",
      "label": "Determines if the pull requests that dependabot creates should have auto complete set.",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "When set to `true`, pull requests that pass all policies will be merged automatically."
    },
    {
      "name": "mergeStrategy",
      "type": "pickList",
      "groupName": "approval_completion",
      "label": "Merge Strategy",
      "defaultValue": "2",
      "required": true,
      "helpMarkDown": "The merge strategy to use. Learn more [here](https://docs.microsoft.com/en-us/javascript/api/azure-devops-extension-api/gitpullrequestmergestrategy).",
      "options": {
        "1": "No fast forward",
        "2": "Squash",
        "3": "Rebase",
        "4": "Rebase merge"
      },
      "visibleRule": "setAutoComplete=true"
    },
    {
      "name": "autoApprove",
      "type": "boolean",
      "groupName": "approval_completion",
      "label": "Determines if the pull requests that dependabot creates should be automatically approved.",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "When set to `true`, pull requests will automatically be approved by the specified user."
    },
    {
      "name": "autoApproveUserEmail",
      "type": "string",
      "groupName": "approval_completion",
      "label": "The email of the user that should approve the PR.",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The email of the user of that shall be used to approve the created PR automatically.",
      "visibleRule": "autoApprove=true"
    },
    {
      "name": "autoApproveUserToken",
      "type": "string",
      "groupName": "approval_completion",
      "label": "A personal access token of the user that should approve the PR.",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "A personal access token of the user of that shall be used to approve the created PR automatically. The token must belong to the user which was specified by email. If the same user that creates the PR should approve, this can be left empty. This won't work with if the Build Service with the build service account!",
      "visibleRule": "autoApprove=true"
    },
    {
      "name": "gitHubConnection",
      "type": "connectedService:github:OAuth,PersonalAccessToken,InstallationToken,Token",
      "groupName": "github",
      "label": "GitHub connection (OAuth or PAT)",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Specify the name of the GitHub service connection to use to connect to the GitHub repositories. The connection must be based on a GitHub user's OAuth or a GitHub personal access token. Learn more about service connections [here](https://aka.ms/AA3am5s)."
    },
    {
      "name": "gitHubAccessToken",
      "type": "string",
      "groupName": "github",
      "label": "GitHub Personal Access Token.",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The raw Personal Access Token for accessing GitHub repositories. Use this in place of `gitHubConnection` such as when it is not possible to create a service connection."
    },
    {
      "name": "azureDevOpsAccessToken",
      "type": "string",
      "groupName": "advanced",
      "label": "Azure DevOps Personal Access Token.",
      "required": false,
      "helpMarkDown": "The Personal Access Token for accessing Azure DevOps repositories. Supply a value here to avoid using permissions for the Build Service either because you cannot change its permissions or because you prefer that the Pull Requests be done by a different user."
    },
    {
      "name": "targetRepositoryName",
      "type": "string",
      "groupName": "advanced",
      "label": "Target Repository Name",
      "required": false,
      "helpMarkDown": "The name of the repository to target for processing. If this value is not supplied then the Build Repository Name is used. Supplying this value allows creation of a single pipeline that runs Dependablot against multiple repositories."
    },
    {
      "name": "updaterOptions",
      "type": "string",
      "groupName": "advanced",
      "label": "Comma separated list of updater options.",
      "required": false,
      "helpMarkDown": "Set a list of updater options in CSV format. Available options depend on the ecosystem. Example: `goprivate=true,kubernetes_updates=true`."
    },
    {
      "name": "excludeRequirementsToUnlock",
      "type": "string",
      "groupName": "advanced",
      "label": "Space-separated list of dependency updates requirements to be excluded.",
      "required": false,
      "helpMarkDown": "Exclude certain dependency updates requirements. See list of allowed values [here](https://github.com/dependabot/dependabot-core/issues/600#issuecomment-407808103). Useful if you have lots of dependencies and the update script too slow. The values provided are space-separated. Example: `own all` to only use the `none` version requirement."
    },
    {
      "name": "dockerImageRegistry",
      "type": "string",
      "label": "Container registry override",
      "groupName": "advanced",
      "helpMarkDown": "The docker registry to use when pulling the docker container used by the task if needed. By default this will use docker hub. This can be useful if the container needs to come from an internal docker registry mirror or alternative source for testing. If the mirror requires authentication add a `docker login` task before this task. Example: `contoso.azurecr.io`",
      "required": false
    },
    {
      "name": "dockerImageRepository",
      "label": "Docker Container repository",
      "type": "string",
      "helpMarkDown": "The docker container repository to use when pulling the docker container used by the task if needed. This can be useful if the default container requires customizations such as custom certs.",
      "defaultValue": "tingle/dependabot-azure-devops",
      "required": true,
      "groupName": "advanced"
    },
    {
      "name": "dockerImageTag",
      "type": "string",
      "groupName": "advanced",
      "label": "Tag of the docker image to be pulled.",
      "required": false,
      "defaultValue": "0.10",
      "helpMarkDown": "The image tag to use when pulling the docker container used by the task. A tag also defines the version. By default, the task decides which tag/version to use. This can be the latest or most stable version. You can also use `major.minor` format to get the latest patch"
    },
    {
      "name": "extraEnvironmentVariables",
      "type": "string",
      "groupName": "advanced",
      "label": "Semicolon delimited list of environment variables",
      "required": false,
      "defaultValue": "",
      "helpMarkDown": "A semicolon (`;`) delimited list of environment variables that are sent to the docker container. See possible use case [here](https://github.com/tinglesoftware/dependabot-azure-devops/issues/138)"
    }
  ],
  "dataSourceBindings": [],
  "execution": {
    "Node10": {
      "target": "index.js"
    }
  }
}