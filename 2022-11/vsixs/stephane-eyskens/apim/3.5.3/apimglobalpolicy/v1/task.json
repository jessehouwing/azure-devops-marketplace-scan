{
  "id": "10e68a6e-a7d7-4f5d-9911-54cf82e989b4",
  "name": "apimglobalpolicy",
  "friendlyName": "API Management - Create or Update a Global Policy",
  "description": "API Management - Create or Update a Global Policy",
  "author": "Stephane Eyskens",
  "helpMarkDown": "API Management - Create or Update a Global Policy",
  "category": "Utility",
  "visibility": [
    "Release"
  ],
  "demands": [],
  "version": {
    "Major": "1",
    "Minor": "0",
    "Patch": "2"
  },
  "minimumAgentVersion": "1.95.0",
  "instanceNameFormat": "API Management - Create or Update a Global Policy $(message)",
  "inputs": [
    {
      "name": "ConnectedServiceNameARM",
      "type": "connectedService:AzureRM",
      "label": "Azure Subscription",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Azure Resource Manager subscription to configure before running PowerShell"

    },
    {
      "name": "ResourceGroupName",
      "label": "Resource Group",
      "type": "pickList",
      "required": true,
      "helpMarkDown": "Select resource group which contains the API portal",
      "properties": {
        "EditableOptions": "True"
      }
    },
    {
      "name": "ApiPortalName",
      "type": "pickList",
      "label": "API Portal",
      "required": true,
      "helpMarkDown": "The API Portal you want to deploy against",
      "properties": {
        "EditableOptions": "True"
      }
    },    
    {
      "name": "TemplateSelector",
      "type": "pickList",
      "label": "Start from Policy Template",
      "required": false,
      "helpMarkDown": "Optionally choose a starting policy template to apply to the API",
      "defaultValue": "None",
      "options": {
        "None": "None",
        "CacheLookup": "Cache lookup",
        "CORS": "CORS",
        "Custom": "Custom",
        "Basic": "Basic",
        "JWT": "JWT",
        "IP": "IP",               
        "HeaderCheck": "HeaderCheck"
      }
    },    
    {
      "name": "None",
      "type": "string",
      "label": "None",
      "defaultValue": "<policies>\n\t<inbound>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
      "helpMarkDown": "",
      "visibleRule": "TemplateSelector = NAN"
    },
    {
      "name": "Custom",
      "type": "multiline",
      "label": "None",
      "defaultValue": "<policies>\n\t<inbound>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
      "helpMarkDown": "",
      "visibleRule": "TemplateSelector = Custom"
    },
    {
      "name": "CacheLookup",
      "type": "multiline",
      "label": "Policy",
      "defaultValue": "<policies>\n\t<inbound>\n\t\t\t<cache-lookup vary-by-developer='false' vary-by-developer-groups='false'>\n\t\t\t\t<vary-by-header>Accept</vary-by-header>\n\t\t\t\t<vary-by-header>Accept-Charset</vary-by-header>\n\t\t\t</cache-lookup>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t\t<cache-store duration='3600' />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
      "required": false,
      "helpMarkDown": "Default Cache Lookup Policy. Mind that this will replace any existing policy for that API. Add other policies manually if necessary!",
      "visibleRule": "TemplateSelector = CacheLookup"
    },
    {
      "name": "Basic",
      "type": "multiline",
      "label": "Policy",
      "defaultValue": "<policies>\n\t<inbound>\n\t\t<authentication-basic username='username' password='password' />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
      "required": false,
      "helpMarkDown": "Default Basic Policy. Mind that this will replace any existing policy for that API. Add other policies manually if necessary!",
      "visibleRule": "TemplateSelector = Basic"
    },
    {
      "name": "CORS",
      "type": "multiline",
      "label": "Policy",
      "defaultValue": "<policies>\n\t<inbound>\n\t\t<cors>\n\t\t\t<allowed-origins><origin>*</origin></allowed-origins>\n\t\t\t<allowed-methods><method>*</method></allowed-methods>\n\t\t\t<allowed-headers><header>*</header></allowed-headers>\n\t\t</cors>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
      "required": false,
      "helpMarkDown": "Default CORS Policy. Mind that this will replace any existing policy for that API. Add other policies manually if necessary!",
      "visibleRule": "TemplateSelector = CORS"
    },
    {
      "name": "JWT",
      "type": "multiline",
      "label": "Policy",
      "defaultValue": "<policies>\n\t<inbound>\n\t\t<validate-jwt header-name='Insert HTTP Header Name here' failed-validation-httpcode='401' failed-validation-error-message='Unauthorized'>\n\t\t\t<issuer-signing-keys><key>Base64 Encoded Key 1</key>\n\t\t\t</issuer-signing-keys>\n\t\t\t<audiences><audience>Audience 1</audience>\n\t\t\t</audiences>\n\t\t<issuers>\n\t\t\t<issuer>Issuer 1</issuer>\n\t\t</issuers>\n\t\t<required-claims><claim name='claim1' match='all'><value>value1</value><value>value2</value></claim>\n\t\t\t</required-claims>\n\t\t</validate-jwt>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
      "required": false,
      "helpMarkDown": "Default JWT validation Policy. Mind that this will replace any existing policy for that API. Add other policies manually if necessary!",
      "visibleRule": "TemplateSelector = JWT"
    },
    {
      "name": "IP",
      "type": "multiline",
      "label": "Policy",
      "defaultValue": "<policies>\n\t<inbound>\n\t\t<ip-filter action='allow | forbid'>\n\t\t\t<address>address</address>\n\t\t\t<address-range from='address' to='address' />\n\t\t</ip-filter>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
      "required": false,
      "helpMarkDown": "Default IP Filtering Policy. Mind that this will replace any existing policy for that API. Add other policies manually if necessary!",
      "visibleRule": "TemplateSelector = IP"
    },    
    {
      "name": "HeaderCheck",
      "type": "multiline",
      "label": "Policy",
      "defaultValue": "<policies>\n\t<inbound>\n\t\t<check-header name='header name' failed-check-httpcode='http status code to return on failure' failed-check-error-message='error message to return' ignore-case='true | false'>\n\t\t\t<value>value</value>\n\t\t</check-header>\n\t\t<base />\n\t</inbound>\n\t<backend>\n\t\t<base />\n\t</backend>\n\t<outbound>\n\t\t<base />\n\t</outbound>\n\t<on-error>\n\t\t<base />\n\t</on-error>\n</policies>",
      "required": false,
      "helpMarkDown": "Default Header Check Policy. Mind that this will replace any existing policy for that API. Add other policies manually if necessary!",
      "visibleRule": "TemplateSelector = HeaderCheck"
    }
  ],
  "dataSourceBindings": [
    {
      "target": "ResourceGroupName",
      "endpointId": "$(ConnectedServiceNameARM)",
      "dataSourceName": "AzureResourceGroups"
    },
    {
      "name": "ApiPortals",
      "target": "ApiPortalName",
      "endpointId": "$(ConnectedServiceNameARM)",
      "endpointUrl": "{{endpoint.url}}/subscriptions/$(endpoint.subscriptionId)/resourceGroups/$(ResourceGroupName)/providers/Microsoft.ApiManagement/service?api-version=2016-07-07",
      "resultSelector": "jsonpath:$.value[*].name",
      "parameters": {
        "ResourceGroupName": "$(ResourceGroupName)"
      }
    }   
    
  ],
  "execution": {
    "PowerShell3": {
      "target": "apimglobalpolicy.ps1"
    }
  }
}
