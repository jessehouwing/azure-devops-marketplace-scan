{
  "$schema": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
  "id": "01b93764-d406-44e8-b3b1-23ed72e65608",
  "name": "LeanIX-Microservice-Intelligence",
  "friendlyName": "LeanIX Value Stream Management Task",
  "description": "Capture microservice and deployment information and send it to your LeanIX workspace",
  "helpMarkDown": "",
  "category": "Utility",
  "author": "LeanIX GmbH",
  "version": {
    "Major": 0,
    "Minor": 1,
    "Patch": 31
  },
  "instanceNameFormat": "Echo LeanIXValueStreamManagement",
  "inputs": [
    {
      "name": "apitoken",
      "type": "string",
      "label": "api token",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "The API-token for the LeanIX workspace."
    },
    {
      "name": "host",
      "type": "string",
      "label": "host name",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "The LeanIX host where the connector is located, e.g: eu.leanix.net."
    },
    {
      "name": "manifestpath",
      "type": "string",
      "label": "manifest path",
      "defaultValue": "/lx-manifest.yml",
      "required": true,
      "helpMarkDown": "The location of the manifest file in your repository that includes information to be send to the CI/CD connector."
    },
    {
      "name": "stage",
      "type": "string",
      "label": "pipeline stage",
      "defaultValue": "production",
      "required": true,
      "helpMarkDown": "The deployment stage the workflow is triggered for."
    },
    {
      "name": "version",
      "type": "string",
      "label": "pipeline version",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "The current deployment version the workflow is triggered for."
    },
    {
      "name": "dependencymanager",
      "type": "string",
      "label": "dependency manager",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Type of the dependency manager used for the project eg: NPM, MAVEN."
    },
    {
      "name": "allowfailure",
      "type": "boolean",
      "label": "allow failure",
      "defaultValue": "true",
      "required": false,
      "helpMarkDown": "Pipeline exits with a failure upon error if set to false."
    }
  ],
  "execution": {
    "Node10": {
      "target": "index.js"
    }
  }
}
